/*
 * Interface wrapper code.
 *
 * Generated by SIP 6.6.2
 *
 * Copyright (C) 2023 Autodesk, Inc. and/or its licensors.
 * All Rights Reserved.
 * 
 * The coded instructions, statements, computer programs, and/or related material 
 * (collectively the "Data") in these files contain unpublished information 
 * proprietary to Autodesk, Inc. and/or its licensors, which is protected by 
 * Canada and United States of America federal copyright law and by international 
 * treaties. 
 * 
 * The Data may not be disclosed or distributed to third parties, in whole or in
 * part, without the prior written consent of Autodesk, Inc. ("Autodesk").
 * 
 * THE DATA IS PROVIDED "AS IS" AND WITHOUT WARRANTY.
 * ALL WARRANTIES ARE EXPRESSLY EXCLUDED AND DISCLAIMED. AUTODESK MAKES NO
 * WARRANTY OF ANY KIND WITH RESPECT TO THE DATA, EXPRESS, IMPLIED OR ARISING
 * BY CUSTOM OR TRADE USAGE, AND DISCLAIMS ANY IMPLIED WARRANTIES OF TITLE, 
 * NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE OR USE. 
 * WITHOUT LIMITING THE FOREGOING, AUTODESK DOES NOT WARRANT THAT THE OPERATION
 * OF THE DATA WILL BE UNINTERRUPTED OR ERROR FREE. 
 * 
 * IN NO EVENT SHALL AUTODESK, ITS AFFILIATES, PARENT COMPANIES, LICENSORS
 * OR SUPPLIERS ("AUTODESK GROUP") BE LIABLE FOR ANY LOSSES, DAMAGES OR EXPENSES
 * OF ANY KIND (INCLUDING WITHOUT LIMITATION PUNITIVE OR MULTIPLE DAMAGES OR OTHER
 * SPECIAL, DIRECT, INDIRECT, EXEMPLARY, INCIDENTAL, LOSS OF PROFITS, REVENUE
 * OR DATA, COST OF COVER OR CONSEQUENTIAL LOSSES OR DAMAGES OF ANY KIND),
 * HOWEVER CAUSED, AND REGARDLESS OF THE THEORY OF LIABILITY, WHETHER DERIVED
 * FROM CONTRACT, TORT (INCLUDING, BUT NOT LIMITED TO, NEGLIGENCE), OR OTHERWISE,
 * ARISING OUT OF OR RELATING TO THE DATA OR ITS USE OR ANY OTHER PERFORMANCE,
 * WHETHER OR NOT AUTODESK HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSS
 * OR DAMAGE. 
 */

#include "sipAPIfbx.h"




class sipFbxBindingTable : public  ::FbxBindingTable
{
public:
    sipFbxBindingTable( ::FbxManager&,const char*);
    virtual ~sipFbxBindingTable();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
     ::FbxStringList GetTypeFlags() const SIP_OVERRIDE;
    const char* GetTypeName() const SIP_OVERRIDE;
    bool SetUrl(const char*) SIP_OVERRIDE;
     ::FbxString GetUrl() const SIP_OVERRIDE;
    const char* Localize(const char*,const char*) const SIP_OVERRIDE;
    void SetSelected(bool) SIP_OVERRIDE;
    bool GetSelected() SIP_OVERRIDE;
     ::FbxObject* Clone( ::FbxObject::ECloneType, ::FbxObject*,void*) const SIP_OVERRIDE;
     ::FbxClassId GetClassId() const SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipFbxBindingTable(const sipFbxBindingTable &);
    sipFbxBindingTable &operator = (const sipFbxBindingTable &);

    char sipPyMethods[9];
};

sipFbxBindingTable::sipFbxBindingTable( ::FbxManager& a0,const char*a1):  ::FbxBindingTable(a0,a1), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipFbxBindingTable::~sipFbxBindingTable()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

 ::FbxStringList sipFbxBindingTable::GetTypeFlags() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[0]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_GetTypeFlags);

    if (!sipMeth)
        return  ::FbxBindingTable::GetTypeFlags();

    extern  ::FbxStringList sipVH_fbx_39(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_fbx_39(sipGILState, 0, sipPySelf, sipMeth);
}

const char* sipFbxBindingTable::GetTypeName() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[1]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_GetTypeName);

    if (!sipMeth)
        return  ::FbxBindingTable::GetTypeName();

    extern const char* sipVH_fbx_27(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_fbx_27(sipGILState, 0, sipPySelf, sipMeth, -6);
}

bool sipFbxBindingTable::SetUrl(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[2], &sipPySelf, SIP_NULLPTR, sipName_SetUrl);

    if (!sipMeth)
        return  ::FbxBindingTable::SetUrl(a0);

    extern bool sipVH_fbx_38(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    return sipVH_fbx_38(sipGILState, 0, sipPySelf, sipMeth, a0);
}

 ::FbxString sipFbxBindingTable::GetUrl() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[3]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_GetUrl);

    if (!sipMeth)
        return  ::FbxBindingTable::GetUrl();

    extern  ::FbxString sipVH_fbx_37(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_fbx_37(sipGILState, 0, sipPySelf, sipMeth);
}

const char* sipFbxBindingTable::Localize(const char*a0,const char*a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[4]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_Localize);

    if (!sipMeth)
        return  ::FbxBindingTable::Localize(a0,a1);

    extern const char* sipVH_fbx_36(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*,const char*, int);

    return sipVH_fbx_36(sipGILState, 0, sipPySelf, sipMeth, a0, a1, -7);
}

void sipFbxBindingTable::SetSelected(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[5], &sipPySelf, SIP_NULLPTR, sipName_SetSelected);

    if (!sipMeth)
    {
         ::FbxBindingTable::SetSelected(a0);
        return;
    }

    extern void sipVH_fbx_35(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_fbx_35(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipFbxBindingTable::GetSelected()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState, &sipPyMethods[6], &sipPySelf, SIP_NULLPTR, sipName_GetSelected);

    if (!sipMeth)
        return  ::FbxBindingTable::GetSelected();

    extern bool sipVH_fbx_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_fbx_17(sipGILState, 0, sipPySelf, sipMeth);
}

 ::FbxObject* sipFbxBindingTable::Clone( ::FbxObject::ECloneType a0, ::FbxObject*a1,void*a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[7]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_Clone);

    if (!sipMeth)
        return  ::FbxBindingTable::Clone(a0,a1,a2);

    extern  ::FbxObject* sipVH_fbx_34(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::FbxObject::ECloneType, ::FbxObject*,void*);

    return sipVH_fbx_34(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}

 ::FbxClassId sipFbxBindingTable::GetClassId() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState, const_cast<char *>(&sipPyMethods[8]), const_cast<sipSimpleWrapper **>(&sipPySelf), SIP_NULLPTR, sipName_GetClassId);

    if (!sipMeth)
        return  ::FbxBindingTable::GetClassId();

    extern  ::FbxClassId sipVH_fbx_33(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_fbx_33(sipGILState, 0, sipPySelf, sipMeth);
}


PyDoc_STRVAR(doc_FbxBindingTable_Create, "Create(FbxManager, str) -> FbxBindingTable\n"
"Create(FbxObject, str) -> FbxBindingTable");

extern "C" {static PyObject *meth_FbxBindingTable_Create(PyObject *, PyObject *);}
static PyObject *meth_FbxBindingTable_Create(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxManager* a0;
        const char* a1;
        PyObject *a1Keep;

        if (sipParseArgs(&sipParseErr, sipArgs, "CJ8A8", &sipSelf, sipType_FbxManager, &a0, &a1Keep, &a1))
        {
             ::FbxBindingTable*sipRes;

            sipRes =  ::FbxBindingTable::Create(a0,a1);
            Py_DECREF(a1Keep);

            return sipConvertFromType(sipRes,sipType_FbxBindingTable,SIP_NULLPTR);
        }
    }

    {
         ::FbxObject* a0;
        const char* a1;
        PyObject *a1Keep;

        if (sipParseArgs(&sipParseErr, sipArgs, "CJ8A8", &sipSelf, sipType_FbxObject, &a0, &a1Keep, &a1))
        {
             ::FbxBindingTable*sipRes;

            sipRes =  ::FbxBindingTable::Create(a0,a1);
            Py_DECREF(a1Keep);

            return sipConvertFromType(sipRes,sipType_FbxBindingTable,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxBindingTable, sipName_Create, doc_FbxBindingTable_Create);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxBindingTable_GetClassId, "GetClassId(self) -> FbxClassId");

extern "C" {static PyObject *meth_FbxBindingTable_GetClassId(PyObject *, PyObject *);}
static PyObject *meth_FbxBindingTable_GetClassId(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!PyObject_TypeCheck(sipSelf, sipTypeAsPyTypeObject(sipType_FbxBindingTable)) || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::FbxBindingTable *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxBindingTable, &sipCpp))
        {
             ::FbxClassId*sipRes;

            sipRes = new  ::FbxClassId((sipSelfWasArg ? sipCpp-> ::FbxBindingTable::GetClassId() : sipCpp->GetClassId()));

            return sipConvertFromNewType(sipRes,sipType_FbxClassId,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxBindingTable, sipName_GetClassId, doc_FbxBindingTable_GetClassId);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *slot_FbxBindingTable___ne__(PyObject *,PyObject *);}
static PyObject *slot_FbxBindingTable___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_FbxBindingTable));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::FbxBindingTable* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_FbxBindingTable, &a0))
        {
            bool sipRes;

            sipRes = !sipCpp-> ::FbxBindingTable::operator==(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_fbx, ne_slot, sipType_FbxBindingTable, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_FbxBindingTable___eq__(PyObject *,PyObject *);}
static PyObject *slot_FbxBindingTable___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_FbxBindingTable));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::FbxBindingTable* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_FbxBindingTable, &a0))
        {
            bool sipRes;

            sipRes = sipCpp-> ::FbxBindingTable::operator==(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_fbx, eq_slot, sipType_FbxBindingTable, sipSelf, sipArg);
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_FbxBindingTable(void *, const sipTypeDef *);}
static void *cast_FbxBindingTable(void *sipCppV, const sipTypeDef *targetType)
{
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipCppV);

    if (targetType == sipType_FbxBindingTable)
        return sipCppV;

    sipCppV = ((const sipClassTypeDef *)sipType_FbxBindingTableBase)->ctd_cast(static_cast< ::FbxBindingTableBase *>(sipCpp), targetType);
    if (sipCppV)
        return sipCppV;

    return SIP_NULLPTR;
}


/* Call the instance's destructor. */
extern "C" {static void release_FbxBindingTable(void *, int);}
static void release_FbxBindingTable(void *sipCppV, int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipFbxBindingTable *>(sipCppV);
}


extern "C" {static void dealloc_FbxBindingTable(sipSimpleWrapper *);}
static void dealloc_FbxBindingTable(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipFbxBindingTable *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_FbxBindingTable(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_FbxBindingTable(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_FbxBindingTable(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipFbxBindingTable *sipCpp = SIP_NULLPTR;

    {
         ::FbxManager* a0;
        const char* a1;
        PyObject *a1Keep;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9A8", sipType_FbxManager, &a0, &a1Keep, &a1))
        {
            sipCpp = new sipFbxBindingTable(*a0,a1);
            Py_DECREF(a1Keep);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_FbxBindingTable[] = {{48, 255, 1}};


/* Define this type's Python slots. */
static sipPySlotDef slots_FbxBindingTable[] = {
    {(void *)slot_FbxBindingTable___ne__, ne_slot},
    {(void *)slot_FbxBindingTable___eq__, eq_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_FbxBindingTable[] = {
    {sipName_Create, meth_FbxBindingTable_Create, METH_VARARGS, doc_FbxBindingTable_Create},
    {sipName_GetClassId, meth_FbxBindingTable_GetClassId, METH_VARARGS, doc_FbxBindingTable_GetClassId}
};


extern "C" {static PyObject *varget_FbxBindingTable_ClassId(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_ClassId(void *, PyObject *sipPySelf, PyObject *)
{
    static PyObject *sipPy = SIP_NULLPTR;
     ::FbxClassId*sipVal;

    if (sipPy)
    {
        Py_INCREF(sipPy);
        return sipPy;
    }

    sipVal = & ::FbxBindingTable::ClassId;

    sipPy = sipConvertFromType(sipVal, sipType_FbxClassId, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -8, sipPySelf);
        Py_INCREF(sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxBindingTable_ClassId(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_ClassId(void *, PyObject *sipPy, PyObject *)
{
     ::FbxClassId*sipVal;
    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxClassId *>(sipForceConvertToType(sipPy, sipType_FbxClassId, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

     ::FbxBindingTable::ClassId = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_CodeAbsoluteURL(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_CodeAbsoluteURL(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -10);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CodeAbsoluteURL;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyString, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -9, sipPySelf);
        sipKeepReference(sipPySelf, -10, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxBindingTable_CodeAbsoluteURL(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_CodeAbsoluteURL(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyString *>(sipForceConvertToType(sipPy, sipType_FbxPropertyString, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CodeAbsoluteURL = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_CodeRelativeURL(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_CodeRelativeURL(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -12);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CodeRelativeURL;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyString, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -11, sipPySelf);
        sipKeepReference(sipPySelf, -12, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxBindingTable_CodeRelativeURL(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_CodeRelativeURL(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyString *>(sipForceConvertToType(sipPy, sipType_FbxPropertyString, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CodeRelativeURL = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_CodeTAG(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_CodeTAG(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -14);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CodeTAG;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyString, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -13, sipPySelf);
        sipKeepReference(sipPySelf, -14, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxBindingTable_CodeTAG(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_CodeTAG(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyString *>(sipForceConvertToType(sipPy, sipType_FbxPropertyString, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CodeTAG = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_DescAbsoluteURL(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_DescAbsoluteURL(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -16);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->DescAbsoluteURL;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyString, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -15, sipPySelf);
        sipKeepReference(sipPySelf, -16, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxBindingTable_DescAbsoluteURL(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_DescAbsoluteURL(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyString *>(sipForceConvertToType(sipPy, sipType_FbxPropertyString, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->DescAbsoluteURL = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_DescRelativeURL(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_DescRelativeURL(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -18);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->DescRelativeURL;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyString, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -17, sipPySelf);
        sipKeepReference(sipPySelf, -18, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxBindingTable_DescRelativeURL(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_DescRelativeURL(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyString *>(sipForceConvertToType(sipPy, sipType_FbxPropertyString, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->DescRelativeURL = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_DescTAG(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_DescTAG(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -20);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->DescTAG;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyString, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -19, sipPySelf);
        sipKeepReference(sipPySelf, -20, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxBindingTable_DescTAG(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_DescTAG(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyString *>(sipForceConvertToType(sipPy, sipType_FbxPropertyString, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->DescTAG = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_TargetName(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_TargetName(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -22);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->TargetName;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyString, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -21, sipPySelf);
        sipKeepReference(sipPySelf, -22, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxBindingTable_TargetName(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_TargetName(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyString *>(sipForceConvertToType(sipPy, sipType_FbxPropertyString, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->TargetName = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_TargetType(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_TargetType(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -24);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->TargetType;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyString, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -23, sipPySelf);
        sipKeepReference(sipPySelf, -24, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxBindingTable_TargetType(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_TargetType(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyString*sipVal;
     ::FbxBindingTable *sipCpp = reinterpret_cast< ::FbxBindingTable *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyString *>(sipForceConvertToType(sipPy, sipType_FbxPropertyString, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->TargetType = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sCodeAbsoluteURL(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sCodeAbsoluteURL(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sCodeAbsoluteURL;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sCodeAbsoluteURL(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sCodeAbsoluteURL(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sCodeAbsoluteURL = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sCodeRelativeURL(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sCodeRelativeURL(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sCodeRelativeURL;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sCodeRelativeURL(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sCodeRelativeURL(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sCodeRelativeURL = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sCodeTAG(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sCodeTAG(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sCodeTAG;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sCodeTAG(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sCodeTAG(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sCodeTAG = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sDefaultCodeAbsoluteURL(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sDefaultCodeAbsoluteURL(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sDefaultCodeAbsoluteURL;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sDefaultCodeAbsoluteURL(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sDefaultCodeAbsoluteURL(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sDefaultCodeAbsoluteURL = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sDefaultCodeRelativeURL(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sDefaultCodeRelativeURL(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sDefaultCodeRelativeURL;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sDefaultCodeRelativeURL(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sDefaultCodeRelativeURL(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sDefaultCodeRelativeURL = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sDefaultCodeTAG(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sDefaultCodeTAG(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sDefaultCodeTAG;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sDefaultCodeTAG(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sDefaultCodeTAG(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sDefaultCodeTAG = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sDefaultDescAbsoluteURL(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sDefaultDescAbsoluteURL(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sDefaultDescAbsoluteURL;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sDefaultDescAbsoluteURL(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sDefaultDescAbsoluteURL(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sDefaultDescAbsoluteURL = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sDefaultDescRelativeURL(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sDefaultDescRelativeURL(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sDefaultDescRelativeURL;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sDefaultDescRelativeURL(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sDefaultDescRelativeURL(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sDefaultDescRelativeURL = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sDefaultDescTAG(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sDefaultDescTAG(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sDefaultDescTAG;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sDefaultDescTAG(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sDefaultDescTAG(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sDefaultDescTAG = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sDefaultTargetName(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sDefaultTargetName(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sDefaultTargetName;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sDefaultTargetName(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sDefaultTargetName(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sDefaultTargetName = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sDefaultTargetType(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sDefaultTargetType(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sDefaultTargetType;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sDefaultTargetType(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sDefaultTargetType(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sDefaultTargetType = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sDescAbsoluteURL(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sDescAbsoluteURL(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sDescAbsoluteURL;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sDescAbsoluteURL(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sDescAbsoluteURL(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sDescAbsoluteURL = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sDescRelativeURL(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sDescRelativeURL(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sDescRelativeURL;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sDescRelativeURL(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sDescRelativeURL(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sDescRelativeURL = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sDescTAG(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sDescTAG(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sDescTAG;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sDescTAG(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sDescTAG(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sDescTAG = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sTargetName(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sTargetName(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sTargetName;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sTargetName(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sTargetName(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sTargetName = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}


extern "C" {static PyObject *varget_FbxBindingTable_sTargetType(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxBindingTable_sTargetType(void *, PyObject *, PyObject *)
{
    const char*sipVal;

    sipVal =  ::FbxBindingTable::sTargetType;

    if (sipVal == SIP_NULLPTR)
    {
        Py_INCREF(Py_None);
        return Py_None;
    }

    return PyUnicode_FromString(sipVal);
}


extern "C" {static int varset_FbxBindingTable_sTargetType(void *, PyObject *, PyObject *);}
static int varset_FbxBindingTable_sTargetType(void *, PyObject *sipPy, PyObject *)
{
    const char*sipVal;
    sipVal = sipString_AsUTF8String(&sipPy);

    if (PyErr_Occurred() != SIP_NULLPTR)
        return -1;

     ::FbxBindingTable::sTargetType = sipVal;

    static PyObject *sipKeep = SIP_NULLPTR;

    Py_XDECREF(sipKeep);
    sipKeep = sipPy;
    Py_INCREF(sipKeep);

    return 0;
}

sipVariableDef variables_FbxBindingTable[] = {
    {ClassVariable, sipName_ClassId, (PyMethodDef *)varget_FbxBindingTable_ClassId, (PyMethodDef *)varset_FbxBindingTable_ClassId, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CodeAbsoluteURL, (PyMethodDef *)varget_FbxBindingTable_CodeAbsoluteURL, (PyMethodDef *)varset_FbxBindingTable_CodeAbsoluteURL, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CodeRelativeURL, (PyMethodDef *)varget_FbxBindingTable_CodeRelativeURL, (PyMethodDef *)varset_FbxBindingTable_CodeRelativeURL, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CodeTAG, (PyMethodDef *)varget_FbxBindingTable_CodeTAG, (PyMethodDef *)varset_FbxBindingTable_CodeTAG, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_DescAbsoluteURL, (PyMethodDef *)varget_FbxBindingTable_DescAbsoluteURL, (PyMethodDef *)varset_FbxBindingTable_DescAbsoluteURL, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_DescRelativeURL, (PyMethodDef *)varget_FbxBindingTable_DescRelativeURL, (PyMethodDef *)varset_FbxBindingTable_DescRelativeURL, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_DescTAG, (PyMethodDef *)varget_FbxBindingTable_DescTAG, (PyMethodDef *)varset_FbxBindingTable_DescTAG, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_TargetName, (PyMethodDef *)varget_FbxBindingTable_TargetName, (PyMethodDef *)varset_FbxBindingTable_TargetName, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_TargetType, (PyMethodDef *)varget_FbxBindingTable_TargetType, (PyMethodDef *)varset_FbxBindingTable_TargetType, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sCodeAbsoluteURL, (PyMethodDef *)varget_FbxBindingTable_sCodeAbsoluteURL, (PyMethodDef *)varset_FbxBindingTable_sCodeAbsoluteURL, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sCodeRelativeURL, (PyMethodDef *)varget_FbxBindingTable_sCodeRelativeURL, (PyMethodDef *)varset_FbxBindingTable_sCodeRelativeURL, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sCodeTAG, (PyMethodDef *)varget_FbxBindingTable_sCodeTAG, (PyMethodDef *)varset_FbxBindingTable_sCodeTAG, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sDefaultCodeAbsoluteURL, (PyMethodDef *)varget_FbxBindingTable_sDefaultCodeAbsoluteURL, (PyMethodDef *)varset_FbxBindingTable_sDefaultCodeAbsoluteURL, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sDefaultCodeRelativeURL, (PyMethodDef *)varget_FbxBindingTable_sDefaultCodeRelativeURL, (PyMethodDef *)varset_FbxBindingTable_sDefaultCodeRelativeURL, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sDefaultCodeTAG, (PyMethodDef *)varget_FbxBindingTable_sDefaultCodeTAG, (PyMethodDef *)varset_FbxBindingTable_sDefaultCodeTAG, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sDefaultDescAbsoluteURL, (PyMethodDef *)varget_FbxBindingTable_sDefaultDescAbsoluteURL, (PyMethodDef *)varset_FbxBindingTable_sDefaultDescAbsoluteURL, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sDefaultDescRelativeURL, (PyMethodDef *)varget_FbxBindingTable_sDefaultDescRelativeURL, (PyMethodDef *)varset_FbxBindingTable_sDefaultDescRelativeURL, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sDefaultDescTAG, (PyMethodDef *)varget_FbxBindingTable_sDefaultDescTAG, (PyMethodDef *)varset_FbxBindingTable_sDefaultDescTAG, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sDefaultTargetName, (PyMethodDef *)varget_FbxBindingTable_sDefaultTargetName, (PyMethodDef *)varset_FbxBindingTable_sDefaultTargetName, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sDefaultTargetType, (PyMethodDef *)varget_FbxBindingTable_sDefaultTargetType, (PyMethodDef *)varset_FbxBindingTable_sDefaultTargetType, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sDescAbsoluteURL, (PyMethodDef *)varget_FbxBindingTable_sDescAbsoluteURL, (PyMethodDef *)varset_FbxBindingTable_sDescAbsoluteURL, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sDescRelativeURL, (PyMethodDef *)varget_FbxBindingTable_sDescRelativeURL, (PyMethodDef *)varset_FbxBindingTable_sDescRelativeURL, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sDescTAG, (PyMethodDef *)varget_FbxBindingTable_sDescTAG, (PyMethodDef *)varset_FbxBindingTable_sDescTAG, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sTargetName, (PyMethodDef *)varget_FbxBindingTable_sTargetName, (PyMethodDef *)varset_FbxBindingTable_sTargetName, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_sTargetType, (PyMethodDef *)varget_FbxBindingTable_sTargetType, (PyMethodDef *)varset_FbxBindingTable_sTargetType, SIP_NULLPTR, SIP_NULLPTR},
};

PyDoc_STRVAR(doc_FbxBindingTable, "\1FbxBindingTable(FbxManager, str)");


sipClassTypeDef sipTypeDef_fbx_FbxBindingTable = {
    {
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_FbxBindingTable,
        SIP_NULLPTR,
        SIP_NULLPTR
    },
    {
        sipNameNr_FbxBindingTable,
        {0, 0, 1},
        2, methods_FbxBindingTable,
        25, variables_FbxBindingTable,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    doc_FbxBindingTable,
    -1,
    -1,
    supers_FbxBindingTable,
    slots_FbxBindingTable,
    init_type_FbxBindingTable,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    dealloc_FbxBindingTable,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_FbxBindingTable,
    cast_FbxBindingTable,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
};
