/*
 * Interface wrapper code.
 *
 * Generated by SIP 6.6.2
 *
 * Copyright (C) 2023 Autodesk, Inc. and/or its licensors.
 * All Rights Reserved.
 * 
 * The coded instructions, statements, computer programs, and/or related material 
 * (collectively the "Data") in these files contain unpublished information 
 * proprietary to Autodesk, Inc. and/or its licensors, which is protected by 
 * Canada and United States of America federal copyright law and by international 
 * treaties. 
 * 
 * The Data may not be disclosed or distributed to third parties, in whole or in
 * part, without the prior written consent of Autodesk, Inc. ("Autodesk").
 * 
 * THE DATA IS PROVIDED "AS IS" AND WITHOUT WARRANTY.
 * ALL WARRANTIES ARE EXPRESSLY EXCLUDED AND DISCLAIMED. AUTODESK MAKES NO
 * WARRANTY OF ANY KIND WITH RESPECT TO THE DATA, EXPRESS, IMPLIED OR ARISING
 * BY CUSTOM OR TRADE USAGE, AND DISCLAIMS ANY IMPLIED WARRANTIES OF TITLE, 
 * NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE OR USE. 
 * WITHOUT LIMITING THE FOREGOING, AUTODESK DOES NOT WARRANT THAT THE OPERATION
 * OF THE DATA WILL BE UNINTERRUPTED OR ERROR FREE. 
 * 
 * IN NO EVENT SHALL AUTODESK, ITS AFFILIATES, PARENT COMPANIES, LICENSORS
 * OR SUPPLIERS ("AUTODESK GROUP") BE LIABLE FOR ANY LOSSES, DAMAGES OR EXPENSES
 * OF ANY KIND (INCLUDING WITHOUT LIMITATION PUNITIVE OR MULTIPLE DAMAGES OR OTHER
 * SPECIAL, DIRECT, INDIRECT, EXEMPLARY, INCIDENTAL, LOSS OF PROFITS, REVENUE
 * OR DATA, COST OF COVER OR CONSEQUENTIAL LOSSES OR DAMAGES OF ANY KIND),
 * HOWEVER CAUSED, AND REGARDLESS OF THE THEORY OF LIABILITY, WHETHER DERIVED
 * FROM CONTRACT, TORT (INCLUDING, BUT NOT LIMITED TO, NEGLIGENCE), OR OTHERWISE,
 * ARISING OUT OF OR RELATING TO THE DATA OR ITS USE OR ANY OTHER PERFORMANCE,
 * WHETHER OR NOT AUTODESK HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSS
 * OR DAMAGE. 
 */

#include "sipAPIfbx.h"




PyDoc_STRVAR(doc_FbxCharacter_Create, "Create(FbxManager, str) -> FbxCharacter\n"
"Create(FbxObject, str) -> FbxCharacter");

extern "C" {static PyObject *meth_FbxCharacter_Create(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_Create(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxManager* a0;
        const char* a1;
        PyObject *a1Keep;

        if (sipParseArgs(&sipParseErr, sipArgs, "CJ8A8", &sipSelf, sipType_FbxManager, &a0, &a1Keep, &a1))
        {
             ::FbxCharacter*sipRes;

            sipRes =  ::FbxCharacter::Create(a0,a1);
            Py_DECREF(a1Keep);

            return sipConvertFromType(sipRes,sipType_FbxCharacter,SIP_NULLPTR);
        }
    }

    {
         ::FbxObject* a0;
        const char* a1;
        PyObject *a1Keep;

        if (sipParseArgs(&sipParseErr, sipArgs, "CJ8A8", &sipSelf, sipType_FbxObject, &a0, &a1Keep, &a1))
        {
             ::FbxCharacter*sipRes;

            sipRes =  ::FbxCharacter::Create(a0,a1);
            Py_DECREF(a1Keep);

            return sipConvertFromType(sipRes,sipType_FbxCharacter,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_Create, doc_FbxCharacter_Create);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetClassId, "GetClassId(self) -> FbxClassId");

extern "C" {static PyObject *meth_FbxCharacter_GetClassId(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetClassId(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!PyObject_TypeCheck(sipSelf, sipTypeAsPyTypeObject(sipType_FbxCharacter)) || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::FbxCharacter *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxCharacter, &sipCpp))
        {
             ::FbxClassId*sipRes;

            sipRes = new  ::FbxClassId((sipSelfWasArg ? sipCpp-> ::FbxCharacter::GetClassId() : sipCpp->GetClassId()));

            return sipConvertFromNewType(sipRes,sipType_FbxClassId,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetClassId, doc_FbxCharacter_GetClassId);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_Reset, "Reset(self)");

extern "C" {static PyObject *meth_FbxCharacter_Reset(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_Reset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxCharacter *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxCharacter, &sipCpp))
        {
            sipCpp->Reset();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_Reset, doc_FbxCharacter_Reset);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_SetInput, "SetInput(self, FbxCharacter.EInputType, FbxObject = None)");

extern "C" {static PyObject *meth_FbxCharacter_SetInput(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_SetInput(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxCharacter::EInputType a0;
         ::FbxObject* a1 = 0;
         ::FbxCharacter *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE|J8", &sipSelf, sipType_FbxCharacter, &sipCpp, sipType_FbxCharacter_EInputType, &a0, sipType_FbxObject, &a1))
        {
            sipCpp->SetInput(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_SetInput, doc_FbxCharacter_SetInput);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetInputType, "GetInputType(self) -> FbxCharacter.EInputType");

extern "C" {static PyObject *meth_FbxCharacter_GetInputType(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetInputType(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::FbxCharacter *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxCharacter, &sipCpp))
        {
             ::FbxCharacter::EInputType sipRes;

            sipRes = sipCpp->GetInputType();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_FbxCharacter_EInputType);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetInputType, doc_FbxCharacter_GetInputType);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetInputObject, "GetInputObject(self) -> FbxObject");

extern "C" {static PyObject *meth_FbxCharacter_GetInputObject(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetInputObject(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::FbxCharacter *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxCharacter, &sipCpp))
        {
             ::FbxObject*sipRes;

            sipRes = sipCpp->GetInputObject();

            return sipConvertFromType(sipRes,sipType_FbxObject,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetInputObject, doc_FbxCharacter_GetInputObject);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_SetCharacterLink, "SetCharacterLink(self, FbxCharacter.ENodeId, FbxCharacterLink, bool = True) -> bool");

extern "C" {static PyObject *meth_FbxCharacter_SetCharacterLink(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_SetCharacterLink(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxCharacter::ENodeId a0;
        const  ::FbxCharacterLink* a1;
        bool a2 = 1;
         ::FbxCharacter *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BEJ9|b", &sipSelf, sipType_FbxCharacter, &sipCpp, sipType_FbxCharacter_ENodeId, &a0, sipType_FbxCharacterLink, &a1, &a2))
        {
            bool sipRes;

            sipRes = sipCpp->SetCharacterLink(a0,*a1,a2);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_SetCharacterLink, doc_FbxCharacter_SetCharacterLink);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetCharacterLink, "GetCharacterLink(self, FbxCharacter.ENodeId, FbxCharacterLink = None) -> bool");

extern "C" {static PyObject *meth_FbxCharacter_GetCharacterLink(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetCharacterLink(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxCharacter::ENodeId a0;
         ::FbxCharacterLink* a1 = 0;
        const  ::FbxCharacter *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE|J8", &sipSelf, sipType_FbxCharacter, &sipCpp, sipType_FbxCharacter_ENodeId, &a0, sipType_FbxCharacterLink, &a1))
        {
            bool sipRes;

            sipRes = sipCpp->GetCharacterLink(a0,a1);

            return PyBool_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetCharacterLink, doc_FbxCharacter_GetCharacterLink);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetControlSet, "GetControlSet(self) -> FbxControlSet");

extern "C" {static PyObject *meth_FbxCharacter_GetControlSet(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetControlSet(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::FbxCharacter *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxCharacter, &sipCpp))
        {
             ::FbxControlSet*sipRes;

            sipRes = &sipCpp->GetControlSet();

            return sipConvertFromType(sipRes,sipType_FbxControlSet,SIP_NULLPTR);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetControlSet, doc_FbxCharacter_GetControlSet);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetCharacterGroupCount, "GetCharacterGroupCount(FbxCharacter.EGroupId) -> int");

extern "C" {static PyObject *meth_FbxCharacter_GetCharacterGroupCount(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetCharacterGroupCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxCharacter::EGroupId a0;

        if (sipParseArgs(&sipParseErr, sipArgs, "CE", &sipSelf, sipType_FbxCharacter_EGroupId, &a0))
        {
            int sipRes;

            sipRes =  ::FbxCharacter::GetCharacterGroupCount(a0);

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetCharacterGroupCount, doc_FbxCharacter_GetCharacterGroupCount);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetCharacterGroupElementByIndex, "GetCharacterGroupElementByIndex(FbxCharacter.EGroupId, int) -> FbxCharacter.ENodeId");

extern "C" {static PyObject *meth_FbxCharacter_GetCharacterGroupElementByIndex(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetCharacterGroupElementByIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxCharacter::EGroupId a0;
        int a1;

        if (sipParseArgs(&sipParseErr, sipArgs, "CEi", &sipSelf, sipType_FbxCharacter_EGroupId, &a0, &a1))
        {
             ::FbxCharacter::ENodeId sipRes;

            sipRes =  ::FbxCharacter::GetCharacterGroupElementByIndex(a0,a1);

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_FbxCharacter_ENodeId);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetCharacterGroupElementByIndex, doc_FbxCharacter_GetCharacterGroupElementByIndex);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetCharacterGroupNameByIndex, "GetCharacterGroupNameByIndex(FbxCharacter.EGroupId, int) -> str");

extern "C" {static PyObject *meth_FbxCharacter_GetCharacterGroupNameByIndex(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetCharacterGroupNameByIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxCharacter::EGroupId a0;
        int a1;

        if (sipParseArgs(&sipParseErr, sipArgs, "CEi", &sipSelf, sipType_FbxCharacter_EGroupId, &a0, &a1))
        {
            char*sipRes;

            sipRes =  ::FbxCharacter::GetCharacterGroupNameByIndex(a0,a1);

            if (sipRes == SIP_NULLPTR)
            {
                Py_INCREF(Py_None);
                return Py_None;
            }

            return PyUnicode_FromString(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetCharacterGroupNameByIndex, doc_FbxCharacter_GetCharacterGroupNameByIndex);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetCharacterGroupVersionByIndex, "GetCharacterGroupVersionByIndex(FbxCharacter.EGroupId, int) -> int");

extern "C" {static PyObject *meth_FbxCharacter_GetCharacterGroupVersionByIndex(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetCharacterGroupVersionByIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxCharacter::EGroupId a0;
        int a1;

        if (sipParseArgs(&sipParseErr, sipArgs, "CEi", &sipSelf, sipType_FbxCharacter_EGroupId, &a0, &a1))
        {
            int sipRes;

            sipRes =  ::FbxCharacter::GetCharacterGroupVersionByIndex(a0,a1);

            return PyLong_FromLong(sipRes);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetCharacterGroupVersionByIndex, doc_FbxCharacter_GetCharacterGroupVersionByIndex);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_FindCharacterGroupIndexByName, "FindCharacterGroupIndexByName(str, bool) -> Tuple[bool, FbxCharacter.EGroupId, int]");

extern "C" {static PyObject *meth_FbxCharacter_FindCharacterGroupIndexByName(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_FindCharacterGroupIndexByName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const char* a0;
        PyObject *a0Keep;
        bool a1;
         ::FbxCharacter::EGroupId a2;
        int a3;

        if (sipParseArgs(&sipParseErr, sipArgs, "CA8b", &sipSelf, &a0Keep, &a0, &a1))
        {
            bool sipRes;

            sipRes =  ::FbxCharacter::FindCharacterGroupIndexByName(a0,a1,a2,a3);
            Py_DECREF(a0Keep);

            return sipBuildResult(0,"(bFi)",sipRes,a2,sipType_FbxCharacter_EGroupId,a3);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_FindCharacterGroupIndexByName, doc_FbxCharacter_FindCharacterGroupIndexByName);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetCharacterGroupIndexByElement, "GetCharacterGroupIndexByElement(FbxCharacter.ENodeId) -> Tuple[bool, FbxCharacter.EGroupId, int]");

extern "C" {static PyObject *meth_FbxCharacter_GetCharacterGroupIndexByElement(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetCharacterGroupIndexByElement(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxCharacter::ENodeId a0;
         ::FbxCharacter::EGroupId a1;
        int a2;

        if (sipParseArgs(&sipParseErr, sipArgs, "CE", &sipSelf, sipType_FbxCharacter_ENodeId, &a0))
        {
            bool sipRes;

            sipRes =  ::FbxCharacter::GetCharacterGroupIndexByElement(a0,a1,a2);

            return sipBuildResult(0,"(bFi)",sipRes,a1,sipType_FbxCharacter_EGroupId,a2);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetCharacterGroupIndexByElement, doc_FbxCharacter_GetCharacterGroupIndexByElement);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetCharacterGroupVersionByElement, "GetCharacterGroupVersionByElement(FbxCharacter.ENodeId) -> Tuple[bool, int]");

extern "C" {static PyObject *meth_FbxCharacter_GetCharacterGroupVersionByElement(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetCharacterGroupVersionByElement(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxCharacter::ENodeId a0;
        int a1;

        if (sipParseArgs(&sipParseErr, sipArgs, "CE", &sipSelf, sipType_FbxCharacter_ENodeId, &a0))
        {
            bool sipRes;

            sipRes =  ::FbxCharacter::GetCharacterGroupVersionByElement(a0,a1);

            return sipBuildResult(0,"(bi)",sipRes,a1);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetCharacterGroupVersionByElement, doc_FbxCharacter_GetCharacterGroupVersionByElement);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetCharacterNodeNameFromNodeId, "GetCharacterNodeNameFromNodeId(FbxCharacter.ENodeId) -> Tuple[bool, bytes]");

extern "C" {static PyObject *meth_FbxCharacter_GetCharacterNodeNameFromNodeId(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetCharacterNodeNameFromNodeId(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::FbxCharacter::ENodeId a0;
        char* a1;

        if (sipParseArgs(&sipParseErr, sipArgs, "CE", &sipSelf, sipType_FbxCharacter_ENodeId, &a0))
        {
            bool sipRes = 0;

#line 491 "D:\\Program Files\\Autodesk\\FBX\\FBX Python Bindings\\2020.3.4\\sip\\fbxcharacter.sip"
            sipRes = FbxCharacter::GetCharacterNodeNameFromNodeId(a0, a1);
            return sipBuildResult(0,"(bc)",sipRes,a1);
#line 539 "D:\\Program Files\\Autodesk\\FBX\\FBX Python Bindings\\2020.3.4\\build\\fbx/sipfbxFbxCharacter.cpp"

            return sipBuildResult(0,"(bs)",sipRes,a1);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetCharacterNodeNameFromNodeId, doc_FbxCharacter_GetCharacterNodeNameFromNodeId);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FbxCharacter_GetCharacterNodeIdFromNodeName, "GetCharacterNodeIdFromNodeName(str) -> Tuple[bool, FbxCharacter.ENodeId]");

extern "C" {static PyObject *meth_FbxCharacter_GetCharacterNodeIdFromNodeName(PyObject *, PyObject *);}
static PyObject *meth_FbxCharacter_GetCharacterNodeIdFromNodeName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const char* a0;
        PyObject *a0Keep;
         ::FbxCharacter::ENodeId a1;

        if (sipParseArgs(&sipParseErr, sipArgs, "CA8", &sipSelf, &a0Keep, &a0))
        {
            bool sipRes;

            sipRes =  ::FbxCharacter::GetCharacterNodeIdFromNodeName(a0,a1);
            Py_DECREF(a0Keep);

            return sipBuildResult(0,"(bF)",sipRes,a1,sipType_FbxCharacter_ENodeId);
        }
    }

    sipNoMethod(sipParseErr, sipName_FbxCharacter, sipName_GetCharacterNodeIdFromNodeName, doc_FbxCharacter_GetCharacterNodeIdFromNodeName);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *slot_FbxCharacter___ne__(PyObject *,PyObject *);}
static PyObject *slot_FbxCharacter___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_FbxCharacter));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::FbxCharacter* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_FbxCharacter, &a0))
        {
            bool sipRes;

            sipRes = !sipCpp-> ::FbxCharacter::operator==(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_fbx, ne_slot, sipType_FbxCharacter, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_FbxCharacter___eq__(PyObject *,PyObject *);}
static PyObject *slot_FbxCharacter___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_FbxCharacter));

    if (!sipCpp)
        return SIP_NULLPTR;

    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::FbxCharacter* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_FbxCharacter, &a0))
        {
            bool sipRes;

            sipRes = sipCpp-> ::FbxCharacter::operator==(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return SIP_NULLPTR;

    return sipPySlotExtend(&sipModuleAPI_fbx, eq_slot, sipType_FbxCharacter, sipSelf, sipArg);
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_FbxCharacter(void *, const sipTypeDef *);}
static void *cast_FbxCharacter(void *sipCppV, const sipTypeDef *targetType)
{
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipCppV);

    if (targetType == sipType_FbxCharacter)
        return sipCppV;

    sipCppV = ((const sipClassTypeDef *)sipType_FbxConstraint)->ctd_cast(static_cast< ::FbxConstraint *>(sipCpp), targetType);
    if (sipCppV)
        return sipCppV;

    return SIP_NULLPTR;
}


/* Call the instance's destructor. */
extern "C" {static void release_FbxCharacter(void *, int);}
static void release_FbxCharacter(void *, int)
{
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_FbxCharacter[] = {{106, 255, 1}};


/* Define this type's Python slots. */
static sipPySlotDef slots_FbxCharacter[] = {
    {(void *)slot_FbxCharacter___ne__, ne_slot},
    {(void *)slot_FbxCharacter___eq__, eq_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_FbxCharacter[] = {
    {sipName_Create, meth_FbxCharacter_Create, METH_VARARGS, doc_FbxCharacter_Create},
    {sipName_FindCharacterGroupIndexByName, meth_FbxCharacter_FindCharacterGroupIndexByName, METH_VARARGS, doc_FbxCharacter_FindCharacterGroupIndexByName},
    {sipName_GetCharacterGroupCount, meth_FbxCharacter_GetCharacterGroupCount, METH_VARARGS, doc_FbxCharacter_GetCharacterGroupCount},
    {sipName_GetCharacterGroupElementByIndex, meth_FbxCharacter_GetCharacterGroupElementByIndex, METH_VARARGS, doc_FbxCharacter_GetCharacterGroupElementByIndex},
    {sipName_GetCharacterGroupIndexByElement, meth_FbxCharacter_GetCharacterGroupIndexByElement, METH_VARARGS, doc_FbxCharacter_GetCharacterGroupIndexByElement},
    {sipName_GetCharacterGroupNameByIndex, meth_FbxCharacter_GetCharacterGroupNameByIndex, METH_VARARGS, doc_FbxCharacter_GetCharacterGroupNameByIndex},
    {sipName_GetCharacterGroupVersionByElement, meth_FbxCharacter_GetCharacterGroupVersionByElement, METH_VARARGS, doc_FbxCharacter_GetCharacterGroupVersionByElement},
    {sipName_GetCharacterGroupVersionByIndex, meth_FbxCharacter_GetCharacterGroupVersionByIndex, METH_VARARGS, doc_FbxCharacter_GetCharacterGroupVersionByIndex},
    {sipName_GetCharacterLink, meth_FbxCharacter_GetCharacterLink, METH_VARARGS, doc_FbxCharacter_GetCharacterLink},
    {sipName_GetCharacterNodeIdFromNodeName, meth_FbxCharacter_GetCharacterNodeIdFromNodeName, METH_VARARGS, doc_FbxCharacter_GetCharacterNodeIdFromNodeName},
    {sipName_GetCharacterNodeNameFromNodeId, meth_FbxCharacter_GetCharacterNodeNameFromNodeId, METH_VARARGS, doc_FbxCharacter_GetCharacterNodeNameFromNodeId},
    {sipName_GetClassId, meth_FbxCharacter_GetClassId, METH_VARARGS, doc_FbxCharacter_GetClassId},
    {sipName_GetControlSet, meth_FbxCharacter_GetControlSet, METH_VARARGS, doc_FbxCharacter_GetControlSet},
    {sipName_GetInputObject, meth_FbxCharacter_GetInputObject, METH_VARARGS, doc_FbxCharacter_GetInputObject},
    {sipName_GetInputType, meth_FbxCharacter_GetInputType, METH_VARARGS, doc_FbxCharacter_GetInputType},
    {sipName_Reset, meth_FbxCharacter_Reset, METH_VARARGS, doc_FbxCharacter_Reset},
    {sipName_SetCharacterLink, meth_FbxCharacter_SetCharacterLink, METH_VARARGS, doc_FbxCharacter_SetCharacterLink},
    {sipName_SetInput, meth_FbxCharacter_SetInput, METH_VARARGS, doc_FbxCharacter_SetInput}
};


extern "C" {static PyObject *varget_FbxCharacter_Active(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_Active(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -622);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->Active;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -621, sipPySelf);
        sipKeepReference(sipPySelf, -622, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_Active(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_Active(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->Active = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_Actor(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_Actor(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxReference*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -624);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->Actor;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxReference, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -623, sipPySelf);
        sipKeepReference(sipPySelf, -624, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_Actor(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_Actor(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxReference*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxReference *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxReference, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->Actor = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleDisplacementDamping(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleDisplacementDamping(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -626);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleDisplacementDamping;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -625, sipPySelf);
        sipKeepReference(sipPySelf, -626, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleDisplacementDamping(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleDisplacementDamping(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleDisplacementDamping = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleDisplacementDampingMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleDisplacementDampingMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -628);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleDisplacementDampingMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -627, sipPySelf);
        sipKeepReference(sipPySelf, -628, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleDisplacementDampingMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleDisplacementDampingMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleDisplacementDampingMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleHeightCompensation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleHeightCompensation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -630);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleHeightCompensation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -629, sipPySelf);
        sipKeepReference(sipPySelf, -630, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleHeightCompensation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleHeightCompensation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleHeightCompensation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleHeightCompensationMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleHeightCompensationMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -632);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleHeightCompensationMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -631, sipPySelf);
        sipKeepReference(sipPySelf, -632, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleHeightCompensationMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleHeightCompensationMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEOffAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleHeightCompensationMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleProximityCompensation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleProximityCompensation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -634);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleProximityCompensation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -633, sipPySelf);
        sipKeepReference(sipPySelf, -634, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleProximityCompensation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleProximityCompensation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleProximityCompensation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleProximityCompensationMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleProximityCompensationMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -636);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleProximityCompensationMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -635, sipPySelf);
        sipKeepReference(sipPySelf, -636, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleProximityCompensationMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleProximityCompensationMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEOffAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleProximityCompensationMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleStabilizationAngularPerimeter(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleStabilizationAngularPerimeter(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -638);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleStabilizationAngularPerimeter;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -637, sipPySelf);
        sipKeepReference(sipPySelf, -638, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleStabilizationAngularPerimeter(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleStabilizationAngularPerimeter(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleStabilizationAngularPerimeter = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleStabilizationAngularPerimeterMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleStabilizationAngularPerimeterMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -640);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleStabilizationAngularPerimeterMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -639, sipPySelf);
        sipKeepReference(sipPySelf, -640, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleStabilizationAngularPerimeterMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleStabilizationAngularPerimeterMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEOffAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleStabilizationAngularPerimeterMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleStabilizationDamping(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleStabilizationDamping(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -642);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleStabilizationDamping;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -641, sipPySelf);
        sipKeepReference(sipPySelf, -642, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleStabilizationDamping(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleStabilizationDamping(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleStabilizationDamping = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleStabilizationDampingMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleStabilizationDampingMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -644);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleStabilizationDampingMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -643, sipPySelf);
        sipKeepReference(sipPySelf, -644, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleStabilizationDampingMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleStabilizationDampingMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEOffAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleStabilizationDampingMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleStabilizationFloorProximity(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleStabilizationFloorProximity(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -646);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleStabilizationFloorProximity;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -645, sipPySelf);
        sipKeepReference(sipPySelf, -646, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleStabilizationFloorProximity(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleStabilizationFloorProximity(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleStabilizationFloorProximity = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleStabilizationFloorProximityMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleStabilizationFloorProximityMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -648);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleStabilizationFloorProximityMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -647, sipPySelf);
        sipKeepReference(sipPySelf, -648, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleStabilizationFloorProximityMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleStabilizationFloorProximityMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEOffAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleStabilizationFloorProximityMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleStabilizationPerimeter(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleStabilizationPerimeter(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -650);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleStabilizationPerimeter;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -649, sipPySelf);
        sipKeepReference(sipPySelf, -650, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleStabilizationPerimeter(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleStabilizationPerimeter(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleStabilizationPerimeter = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleStabilizationPerimeterMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleStabilizationPerimeterMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -652);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleStabilizationPerimeterMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -651, sipPySelf);
        sipKeepReference(sipPySelf, -652, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleStabilizationPerimeterMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleStabilizationPerimeterMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleStabilizationPerimeterMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleStabilizationRecoveryTime(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleStabilizationRecoveryTime(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -654);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleStabilizationRecoveryTime;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -653, sipPySelf);
        sipKeepReference(sipPySelf, -654, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleStabilizationRecoveryTime(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleStabilizationRecoveryTime(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleStabilizationRecoveryTime = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleStabilizationRecoveryTimeMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleStabilizationRecoveryTimeMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -656);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleStabilizationRecoveryTimeMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -655, sipPySelf);
        sipKeepReference(sipPySelf, -656, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleStabilizationRecoveryTimeMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleStabilizationRecoveryTimeMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEOffAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleStabilizationRecoveryTimeMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleStabilizationTime(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleStabilizationTime(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -658);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleStabilizationTime;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -657, sipPySelf);
        sipKeepReference(sipPySelf, -658, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleStabilizationTime(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleStabilizationTime(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleStabilizationTime = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_AnkleStabilizationTimeMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_AnkleStabilizationTimeMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -660);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->AnkleStabilizationTimeMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -659, sipPySelf);
        sipKeepReference(sipPySelf, -660, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_AnkleStabilizationTimeMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_AnkleStabilizationTimeMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->AnkleStabilizationTimeMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ApplyLimits(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ApplyLimits(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -662);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ApplyLimits;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -661, sipPySelf);
        sipKeepReference(sipPySelf, -662, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ApplyLimits(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ApplyLimits(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ApplyLimits = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_Character(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_Character(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxReference*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -664);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->Character;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxReference, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -663, sipPySelf);
        sipKeepReference(sipPySelf, -664, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_Character(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_Character(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxReference*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxReference *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxReference, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->Character = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_Characterize(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_Characterize(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -666);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->Characterize;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -665, sipPySelf);
        sipKeepReference(sipPySelf, -666, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_Characterize(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_Characterize(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->Characterize = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ChestReduction(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ChestReduction(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -668);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ChestReduction;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -667, sipPySelf);
        sipKeepReference(sipPySelf, -668, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ChestReduction(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ChestReduction(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ChestReduction = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ChestTOffset(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ChestTOffset(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble3*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -670);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ChestTOffset;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble3, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -669, sipPySelf);
        sipKeepReference(sipPySelf, -670, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ChestTOffset(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ChestTOffset(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble3*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble3 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble3, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ChestTOffset = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ClassId(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ClassId(void *, PyObject *sipPySelf, PyObject *)
{
    static PyObject *sipPy = SIP_NULLPTR;
     ::FbxClassId*sipVal;

    if (sipPy)
    {
        Py_INCREF(sipPy);
        return sipPy;
    }

    sipVal = & ::FbxCharacter::ClassId;

    sipPy = sipConvertFromType(sipVal, sipType_FbxClassId, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -671, sipPySelf);
        Py_INCREF(sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ClassId(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ClassId(void *, PyObject *sipPy, PyObject *)
{
     ::FbxClassId*sipVal;
    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxClassId *>(sipForceConvertToType(sipPy, sipType_FbxClassId, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

     ::FbxCharacter::ClassId = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CollarReduction(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CollarReduction(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -673);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CollarReduction;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -672, sipPySelf);
        sipKeepReference(sipPySelf, -673, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CollarReduction(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CollarReduction(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CollarReduction = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CollarStiffnessX(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CollarStiffnessX(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -675);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CollarStiffnessX;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -674, sipPySelf);
        sipKeepReference(sipPySelf, -675, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CollarStiffnessX(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CollarStiffnessX(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CollarStiffnessX = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CollarStiffnessY(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CollarStiffnessY(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -677);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CollarStiffnessY;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -676, sipPySelf);
        sipKeepReference(sipPySelf, -677, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CollarStiffnessY(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CollarStiffnessY(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CollarStiffnessY = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CollarStiffnessZ(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CollarStiffnessZ(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -679);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CollarStiffnessZ;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -678, sipPySelf);
        sipKeepReference(sipPySelf, -679, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CollarStiffnessZ(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CollarStiffnessZ(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CollarStiffnessZ = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ContactBehaviour(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ContactBehaviour(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEContactBehaviour*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -681);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ContactBehaviour;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEContactBehaviour, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -680, sipPySelf);
        sipKeepReference(sipPySelf, -681, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ContactBehaviour(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ContactBehaviour(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEContactBehaviour*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEContactBehaviour *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEContactBehaviour, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ContactBehaviour = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ControlSet(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ControlSet(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxReference*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -683);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ControlSet;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxReference, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -682, sipPySelf);
        sipKeepReference(sipPySelf, -683, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ControlSet(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ControlSet(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxReference*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxReference *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxReference, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ControlSet = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlChestPullLeftHand(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlChestPullLeftHand(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -685);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlChestPullLeftHand;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -684, sipPySelf);
        sipKeepReference(sipPySelf, -685, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlChestPullLeftHand(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlChestPullLeftHand(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlChestPullLeftHand = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlChestPullRightHand(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlChestPullRightHand(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -687);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlChestPullRightHand;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -686, sipPySelf);
        sipKeepReference(sipPySelf, -687, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlChestPullRightHand(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlChestPullRightHand(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlChestPullRightHand = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlEnforceGravity(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlEnforceGravity(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -689);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlEnforceGravity;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -688, sipPySelf);
        sipKeepReference(sipPySelf, -689, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlEnforceGravity(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlEnforceGravity(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlEnforceGravity = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlNeckStiffness(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlNeckStiffness(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -691);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlNeckStiffness;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -690, sipPySelf);
        sipKeepReference(sipPySelf, -691, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlNeckStiffness(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlNeckStiffness(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlNeckStiffness = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullHead(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullHead(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -693);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullHead;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -692, sipPySelf);
        sipKeepReference(sipPySelf, -693, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullHead(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullHead(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullHead = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullLeftElbow(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullLeftElbow(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -695);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullLeftElbow;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -694, sipPySelf);
        sipKeepReference(sipPySelf, -695, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullLeftElbow(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullLeftElbow(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullLeftElbow = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullLeftFingerBase(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullLeftFingerBase(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -697);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullLeftFingerBase;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -696, sipPySelf);
        sipKeepReference(sipPySelf, -697, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullLeftFingerBase(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullLeftFingerBase(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullLeftFingerBase = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullLeftFoot(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullLeftFoot(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -699);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullLeftFoot;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -698, sipPySelf);
        sipKeepReference(sipPySelf, -699, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullLeftFoot(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullLeftFoot(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullLeftFoot = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullLeftHand(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullLeftHand(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -701);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullLeftHand;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -700, sipPySelf);
        sipKeepReference(sipPySelf, -701, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullLeftHand(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullLeftHand(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullLeftHand = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullLeftKnee(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullLeftKnee(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -703);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullLeftKnee;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -702, sipPySelf);
        sipKeepReference(sipPySelf, -703, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullLeftKnee(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullLeftKnee(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullLeftKnee = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullLeftToeBase(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullLeftToeBase(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -705);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullLeftToeBase;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -704, sipPySelf);
        sipKeepReference(sipPySelf, -705, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullLeftToeBase(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullLeftToeBase(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullLeftToeBase = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullRightElbow(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullRightElbow(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -707);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullRightElbow;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -706, sipPySelf);
        sipKeepReference(sipPySelf, -707, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullRightElbow(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullRightElbow(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullRightElbow = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullRightFingerBase(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullRightFingerBase(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -709);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullRightFingerBase;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -708, sipPySelf);
        sipKeepReference(sipPySelf, -709, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullRightFingerBase(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullRightFingerBase(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullRightFingerBase = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullRightFoot(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullRightFoot(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -711);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullRightFoot;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -710, sipPySelf);
        sipKeepReference(sipPySelf, -711, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullRightFoot(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullRightFoot(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullRightFoot = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullRightHand(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullRightHand(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -713);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullRightHand;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -712, sipPySelf);
        sipKeepReference(sipPySelf, -713, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullRightHand(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullRightHand(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullRightHand = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullRightKnee(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullRightKnee(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -715);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullRightKnee;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -714, sipPySelf);
        sipKeepReference(sipPySelf, -715, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullRightKnee(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullRightKnee(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullRightKnee = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlPullRightToeBase(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlPullRightToeBase(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -717);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlPullRightToeBase;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -716, sipPySelf);
        sipKeepReference(sipPySelf, -717, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlPullRightToeBase(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlPullRightToeBase(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlPullRightToeBase = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistChestOrientation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistChestOrientation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -719);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistChestOrientation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -718, sipPySelf);
        sipKeepReference(sipPySelf, -719, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistChestOrientation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistChestOrientation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistChestOrientation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistChestPosition(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistChestPosition(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -721);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistChestPosition;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -720, sipPySelf);
        sipKeepReference(sipPySelf, -721, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistChestPosition(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistChestPosition(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistChestPosition = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistCompressionFactorLeftElbow(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistCompressionFactorLeftElbow(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -723);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistCompressionFactorLeftElbow;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -722, sipPySelf);
        sipKeepReference(sipPySelf, -723, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistCompressionFactorLeftElbow(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistCompressionFactorLeftElbow(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistCompressionFactorLeftElbow = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistCompressionFactorLeftKnee(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistCompressionFactorLeftKnee(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -725);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistCompressionFactorLeftKnee;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -724, sipPySelf);
        sipKeepReference(sipPySelf, -725, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistCompressionFactorLeftKnee(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistCompressionFactorLeftKnee(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistCompressionFactorLeftKnee = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistCompressionFactorRightElbow(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistCompressionFactorRightElbow(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -727);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistCompressionFactorRightElbow;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -726, sipPySelf);
        sipKeepReference(sipPySelf, -727, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistCompressionFactorRightElbow(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistCompressionFactorRightElbow(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistCompressionFactorRightElbow = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistCompressionFactorRightKnee(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistCompressionFactorRightKnee(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -729);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistCompressionFactorRightKnee;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -728, sipPySelf);
        sipKeepReference(sipPySelf, -729, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistCompressionFactorRightKnee(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistCompressionFactorRightKnee(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistCompressionFactorRightKnee = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistHipsOrientation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistHipsOrientation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -731);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistHipsOrientation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -730, sipPySelf);
        sipKeepReference(sipPySelf, -731, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistHipsOrientation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistHipsOrientation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistHipsOrientation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistHipsPosition(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistHipsPosition(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -733);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistHipsPosition;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -732, sipPySelf);
        sipKeepReference(sipPySelf, -733, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistHipsPosition(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistHipsPosition(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistHipsPosition = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistLeftCollar(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistLeftCollar(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -735);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistLeftCollar;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -734, sipPySelf);
        sipKeepReference(sipPySelf, -735, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistLeftCollar(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistLeftCollar(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistLeftCollar = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistLeftElbow(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistLeftElbow(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -737);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistLeftElbow;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -736, sipPySelf);
        sipKeepReference(sipPySelf, -737, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistLeftElbow(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistLeftElbow(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistLeftElbow = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistLeftKnee(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistLeftKnee(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -739);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistLeftKnee;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -738, sipPySelf);
        sipKeepReference(sipPySelf, -739, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistLeftKnee(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistLeftKnee(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistLeftKnee = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistMaximumExtensionLeftElbow(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistMaximumExtensionLeftElbow(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -741);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistMaximumExtensionLeftElbow;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -740, sipPySelf);
        sipKeepReference(sipPySelf, -741, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistMaximumExtensionLeftElbow(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistMaximumExtensionLeftElbow(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistMaximumExtensionLeftElbow = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistMaximumExtensionLeftKnee(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistMaximumExtensionLeftKnee(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -743);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistMaximumExtensionLeftKnee;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -742, sipPySelf);
        sipKeepReference(sipPySelf, -743, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistMaximumExtensionLeftKnee(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistMaximumExtensionLeftKnee(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistMaximumExtensionLeftKnee = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistMaximumExtensionRightElbow(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistMaximumExtensionRightElbow(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -745);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistMaximumExtensionRightElbow;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -744, sipPySelf);
        sipKeepReference(sipPySelf, -745, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistMaximumExtensionRightElbow(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistMaximumExtensionRightElbow(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistMaximumExtensionRightElbow = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistMaximumExtensionRightKnee(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistMaximumExtensionRightKnee(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -747);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistMaximumExtensionRightKnee;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -746, sipPySelf);
        sipKeepReference(sipPySelf, -747, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistMaximumExtensionRightKnee(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistMaximumExtensionRightKnee(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistMaximumExtensionRightKnee = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistRightCollar(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistRightCollar(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -749);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistRightCollar;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -748, sipPySelf);
        sipKeepReference(sipPySelf, -749, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistRightCollar(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistRightCollar(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistRightCollar = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistRightElbow(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistRightElbow(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -751);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistRightElbow;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -750, sipPySelf);
        sipKeepReference(sipPySelf, -751, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistRightElbow(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistRightElbow(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistRightElbow = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlResistRightKnee(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlResistRightKnee(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -753);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlResistRightKnee;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -752, sipPySelf);
        sipKeepReference(sipPySelf, -753, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlResistRightKnee(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlResistRightKnee(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlResistRightKnee = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_CtrlSpineStiffness(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_CtrlSpineStiffness(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -755);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->CtrlSpineStiffness;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -754, sipPySelf);
        sipKeepReference(sipPySelf, -755, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_CtrlSpineStiffness(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_CtrlSpineStiffness(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->CtrlSpineStiffness = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_Damping(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_Damping(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -757);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->Damping;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -756, sipPySelf);
        sipKeepReference(sipPySelf, -757, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_Damping(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_Damping(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->Damping = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_DestinationObject(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_DestinationObject(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxReference*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -759);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->DestinationObject;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxReference, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -758, sipPySelf);
        sipKeepReference(sipPySelf, -759, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_DestinationObject(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_DestinationObject(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxReference*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxReference *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxReference, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->DestinationObject = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_DisplacementDamping(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_DisplacementDamping(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -761);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->DisplacementDamping;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -760, sipPySelf);
        sipKeepReference(sipPySelf, -761, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_DisplacementDamping(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_DisplacementDamping(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->DisplacementDamping = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_DisplacementDampingMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_DisplacementDampingMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -763);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->DisplacementDampingMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -762, sipPySelf);
        sipKeepReference(sipPySelf, -763, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_DisplacementDampingMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_DisplacementDampingMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEOffAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->DisplacementDampingMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_DisplacementMemory(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_DisplacementMemory(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -765);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->DisplacementMemory;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -764, sipPySelf);
        sipKeepReference(sipPySelf, -765, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_DisplacementMemory(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_DisplacementMemory(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->DisplacementMemory = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_DisplacementMemoryMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_DisplacementMemoryMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -767);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->DisplacementMemoryMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -766, sipPySelf);
        sipKeepReference(sipPySelf, -767, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_DisplacementMemoryMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_DisplacementMemoryMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->DisplacementMemoryMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ExtraCollarRatio(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ExtraCollarRatio(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -769);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ExtraCollarRatio;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -768, sipPySelf);
        sipKeepReference(sipPySelf, -769, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ExtraCollarRatio(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ExtraCollarRatio(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ExtraCollarRatio = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FingerSolving(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FingerSolving(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -771);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FingerSolving;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -770, sipPySelf);
        sipKeepReference(sipPySelf, -771, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FingerSolving(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FingerSolving(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FingerSolving = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootAutomaticToes(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootAutomaticToes(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -773);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootAutomaticToes;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -772, sipPySelf);
        sipKeepReference(sipPySelf, -773, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootAutomaticToes(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootAutomaticToes(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootAutomaticToes = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootBackToAnkle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootBackToAnkle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -775);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootBackToAnkle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -774, sipPySelf);
        sipKeepReference(sipPySelf, -775, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootBackToAnkle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootBackToAnkle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootBackToAnkle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootBottomToAnkle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootBottomToAnkle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -777);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootBottomToAnkle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -776, sipPySelf);
        sipKeepReference(sipPySelf, -777, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootBottomToAnkle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootBottomToAnkle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootBottomToAnkle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootContactSize(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootContactSize(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -779);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootContactSize;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -778, sipPySelf);
        sipKeepReference(sipPySelf, -779, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootContactSize(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootContactSize(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootContactSize = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootContactStiffness(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootContactStiffness(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -781);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootContactStiffness;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -780, sipPySelf);
        sipKeepReference(sipPySelf, -781, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootContactStiffness(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootContactStiffness(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootContactStiffness = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootContactType(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootContactType(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEFootContactType*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -783);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootContactType;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEFootContactType, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -782, sipPySelf);
        sipKeepReference(sipPySelf, -783, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootContactType(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootContactType(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEFootContactType*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEFootContactType *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEFootContactType, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootContactType = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootFingerContact(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootFingerContact(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -785);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootFingerContact;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -784, sipPySelf);
        sipKeepReference(sipPySelf, -785, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootFingerContact(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootFingerContact(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootFingerContact = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootFingerContactMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootFingerContactMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEFingerContactMode*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -787);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootFingerContactMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEFingerContactMode, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -786, sipPySelf);
        sipKeepReference(sipPySelf, -787, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootFingerContactMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootFingerContactMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEFingerContactMode*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEFingerContactMode *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEFingerContactMode, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootFingerContactMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootFingerContactRollStiffness(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootFingerContactRollStiffness(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -789);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootFingerContactRollStiffness;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -788, sipPySelf);
        sipKeepReference(sipPySelf, -789, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootFingerContactRollStiffness(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootFingerContactRollStiffness(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootFingerContactRollStiffness = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootFloorContact(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootFloorContact(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -791);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootFloorContact;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -790, sipPySelf);
        sipKeepReference(sipPySelf, -791, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootFloorContact(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootFloorContact(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootFloorContact = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootFloorPivot(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootFloorPivot(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEFloorPivot*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -793);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootFloorPivot;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEFloorPivot, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -792, sipPySelf);
        sipKeepReference(sipPySelf, -793, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootFloorPivot(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootFloorPivot(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEFloorPivot*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEFloorPivot *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEFloorPivot, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootFloorPivot = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootFrontToMiddle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootFrontToMiddle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -795);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootFrontToMiddle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -794, sipPySelf);
        sipKeepReference(sipPySelf, -795, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootFrontToMiddle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootFrontToMiddle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootFrontToMiddle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootInToAnkle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootInToAnkle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -797);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootInToAnkle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -796, sipPySelf);
        sipKeepReference(sipPySelf, -797, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootInToAnkle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootInToAnkle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootInToAnkle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootMiddleToAnkle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootMiddleToAnkle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -799);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootMiddleToAnkle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -798, sipPySelf);
        sipKeepReference(sipPySelf, -799, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootMiddleToAnkle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootMiddleToAnkle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootMiddleToAnkle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_FootOutToAnkle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_FootOutToAnkle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -801);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->FootOutToAnkle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -800, sipPySelf);
        sipKeepReference(sipPySelf, -801, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_FootOutToAnkle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_FootOutToAnkle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->FootOutToAnkle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ForceActorSpace(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ForceActorSpace(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -803);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ForceActorSpace;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -802, sipPySelf);
        sipKeepReference(sipPySelf, -803, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ForceActorSpace(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ForceActorSpace(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ForceActorSpace = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandAutomaticFingers(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandAutomaticFingers(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -805);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandAutomaticFingers;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -804, sipPySelf);
        sipKeepReference(sipPySelf, -805, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandAutomaticFingers(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandAutomaticFingers(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandAutomaticFingers = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandBackToWrist(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandBackToWrist(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -807);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandBackToWrist;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -806, sipPySelf);
        sipKeepReference(sipPySelf, -807, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandBackToWrist(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandBackToWrist(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandBackToWrist = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandBottomToWrist(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandBottomToWrist(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -809);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandBottomToWrist;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -808, sipPySelf);
        sipKeepReference(sipPySelf, -809, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandBottomToWrist(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandBottomToWrist(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandBottomToWrist = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandContactSize(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandContactSize(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -811);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandContactSize;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -810, sipPySelf);
        sipKeepReference(sipPySelf, -811, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandContactSize(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandContactSize(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandContactSize = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandContactStiffness(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandContactStiffness(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -813);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandContactStiffness;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -812, sipPySelf);
        sipKeepReference(sipPySelf, -813, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandContactStiffness(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandContactStiffness(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandContactStiffness = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandContactType(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandContactType(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEHandContactType*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -815);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandContactType;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEHandContactType, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -814, sipPySelf);
        sipKeepReference(sipPySelf, -815, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandContactType(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandContactType(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEHandContactType*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEHandContactType *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEHandContactType, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandContactType = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandFingerContact(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandFingerContact(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -817);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandFingerContact;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -816, sipPySelf);
        sipKeepReference(sipPySelf, -817, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandFingerContact(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandFingerContact(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandFingerContact = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandFingerContactMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandFingerContactMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEFingerContactMode*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -819);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandFingerContactMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEFingerContactMode, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -818, sipPySelf);
        sipKeepReference(sipPySelf, -819, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandFingerContactMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandFingerContactMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEFingerContactMode*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEFingerContactMode *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEFingerContactMode, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandFingerContactMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandFingerContactRollStiffness(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandFingerContactRollStiffness(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -821);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandFingerContactRollStiffness;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -820, sipPySelf);
        sipKeepReference(sipPySelf, -821, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandFingerContactRollStiffness(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandFingerContactRollStiffness(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandFingerContactRollStiffness = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandFloorContact(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandFloorContact(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -823);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandFloorContact;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -822, sipPySelf);
        sipKeepReference(sipPySelf, -823, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandFloorContact(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandFloorContact(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandFloorContact = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandFloorPivot(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandFloorPivot(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEFloorPivot*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -825);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandFloorPivot;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEFloorPivot, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -824, sipPySelf);
        sipKeepReference(sipPySelf, -825, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandFloorPivot(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandFloorPivot(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEFloorPivot*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEFloorPivot *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEFloorPivot, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandFloorPivot = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandFrontToMiddle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandFrontToMiddle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -827);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandFrontToMiddle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -826, sipPySelf);
        sipKeepReference(sipPySelf, -827, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandFrontToMiddle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandFrontToMiddle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandFrontToMiddle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandInToWrist(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandInToWrist(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -829);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandInToWrist;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -828, sipPySelf);
        sipKeepReference(sipPySelf, -829, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandInToWrist(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandInToWrist(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandInToWrist = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandMiddleToWrist(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandMiddleToWrist(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -831);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandMiddleToWrist;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -830, sipPySelf);
        sipKeepReference(sipPySelf, -831, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandMiddleToWrist(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandMiddleToWrist(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandMiddleToWrist = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HandOutToWrist(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HandOutToWrist(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -833);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HandOutToWrist;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -832, sipPySelf);
        sipKeepReference(sipPySelf, -833, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HandOutToWrist(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HandOutToWrist(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HandOutToWrist = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HeadReduction(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HeadReduction(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -835);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HeadReduction;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -834, sipPySelf);
        sipKeepReference(sipPySelf, -835, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HeadReduction(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HeadReduction(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HeadReduction = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HikVersion(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HikVersion(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -837);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HikVersion;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -836, sipPySelf);
        sipKeepReference(sipPySelf, -837, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HikVersion(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HikVersion(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HikVersion = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HipsDisplacementDamping(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HipsDisplacementDamping(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -839);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HipsDisplacementDamping;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -838, sipPySelf);
        sipKeepReference(sipPySelf, -839, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HipsDisplacementDamping(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HipsDisplacementDamping(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HipsDisplacementDamping = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HipsDisplacementDampingMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HipsDisplacementDampingMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -841);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HipsDisplacementDampingMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -840, sipPySelf);
        sipKeepReference(sipPySelf, -841, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HipsDisplacementDampingMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HipsDisplacementDampingMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HipsDisplacementDampingMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HipsHeightCompensation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HipsHeightCompensation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -843);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HipsHeightCompensation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -842, sipPySelf);
        sipKeepReference(sipPySelf, -843, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HipsHeightCompensation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HipsHeightCompensation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HipsHeightCompensation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HipsHeightCompensationMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HipsHeightCompensationMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -845);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HipsHeightCompensationMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -844, sipPySelf);
        sipKeepReference(sipPySelf, -845, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HipsHeightCompensationMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HipsHeightCompensationMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEOffAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HipsHeightCompensationMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HipsTOffset(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HipsTOffset(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble3*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -847);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HipsTOffset;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble3, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -846, sipPySelf);
        sipKeepReference(sipPySelf, -847, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HipsTOffset(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HipsTOffset(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble3*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble3 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble3, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HipsTOffset = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_HipsTranslationMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_HipsTranslationMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEHipsTranslationMode*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -849);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->HipsTranslationMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEHipsTranslationMode, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -848, sipPySelf);
        sipKeepReference(sipPySelf, -849, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_HipsTranslationMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_HipsTranslationMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEHipsTranslationMode*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEHipsTranslationMode *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEHipsTranslationMode, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->HipsTranslationMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftArmMaxExtensionAngle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftArmMaxExtensionAngle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -851);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftArmMaxExtensionAngle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -850, sipPySelf);
        sipKeepReference(sipPySelf, -851, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftArmMaxExtensionAngle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftArmMaxExtensionAngle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftArmMaxExtensionAngle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftArmRoll(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftArmRoll(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -853);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftArmRoll;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -852, sipPySelf);
        sipKeepReference(sipPySelf, -853, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftArmRoll(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftArmRoll(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftArmRoll = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftArmRollEx(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftArmRollEx(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -855);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftArmRollEx;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -854, sipPySelf);
        sipKeepReference(sipPySelf, -855, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftArmRollEx(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftArmRollEx(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftArmRollEx = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftArmRollExMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftArmRollExMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -857);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftArmRollExMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -856, sipPySelf);
        sipKeepReference(sipPySelf, -857, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftArmRollExMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftArmRollExMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftArmRollExMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftArmRollMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftArmRollMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -859);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftArmRollMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -858, sipPySelf);
        sipKeepReference(sipPySelf, -859, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftArmRollMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftArmRollMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftArmRollMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftElbowKillPitch(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftElbowKillPitch(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -861);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftElbowKillPitch;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -860, sipPySelf);
        sipKeepReference(sipPySelf, -861, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftElbowKillPitch(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftElbowKillPitch(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftElbowKillPitch = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftFootExtraFingerTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftFootExtraFingerTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -863);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftFootExtraFingerTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -862, sipPySelf);
        sipKeepReference(sipPySelf, -863, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftFootExtraFingerTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftFootExtraFingerTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftFootExtraFingerTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftFootIndexTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftFootIndexTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -865);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftFootIndexTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -864, sipPySelf);
        sipKeepReference(sipPySelf, -865, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftFootIndexTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftFootIndexTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftFootIndexTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftFootMiddleTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftFootMiddleTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -867);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftFootMiddleTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -866, sipPySelf);
        sipKeepReference(sipPySelf, -867, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftFootMiddleTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftFootMiddleTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftFootMiddleTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftFootPinkyTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftFootPinkyTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -869);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftFootPinkyTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -868, sipPySelf);
        sipKeepReference(sipPySelf, -869, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftFootPinkyTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftFootPinkyTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftFootPinkyTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftFootRingTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftFootRingTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -871);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftFootRingTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -870, sipPySelf);
        sipKeepReference(sipPySelf, -871, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftFootRingTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftFootRingTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftFootRingTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftFootThumbTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftFootThumbTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -873);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftFootThumbTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -872, sipPySelf);
        sipKeepReference(sipPySelf, -873, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftFootThumbTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftFootThumbTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftFootThumbTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftForeArmRoll(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftForeArmRoll(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -875);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftForeArmRoll;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -874, sipPySelf);
        sipKeepReference(sipPySelf, -875, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftForeArmRoll(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftForeArmRoll(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftForeArmRoll = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftForeArmRollEx(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftForeArmRollEx(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -877);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftForeArmRollEx;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -876, sipPySelf);
        sipKeepReference(sipPySelf, -877, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftForeArmRollEx(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftForeArmRollEx(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftForeArmRollEx = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftForeArmRollExMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftForeArmRollExMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -879);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftForeArmRollExMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -878, sipPySelf);
        sipKeepReference(sipPySelf, -879, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftForeArmRollExMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftForeArmRollExMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftForeArmRollExMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftForeArmRollMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftForeArmRollMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -881);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftForeArmRollMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -880, sipPySelf);
        sipKeepReference(sipPySelf, -881, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftForeArmRollMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftForeArmRollMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftForeArmRollMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftHandExtraFingerTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftHandExtraFingerTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -883);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftHandExtraFingerTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -882, sipPySelf);
        sipKeepReference(sipPySelf, -883, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftHandExtraFingerTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftHandExtraFingerTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftHandExtraFingerTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftHandIndexTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftHandIndexTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -885);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftHandIndexTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -884, sipPySelf);
        sipKeepReference(sipPySelf, -885, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftHandIndexTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftHandIndexTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftHandIndexTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftHandMiddleTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftHandMiddleTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -887);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftHandMiddleTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -886, sipPySelf);
        sipKeepReference(sipPySelf, -887, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftHandMiddleTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftHandMiddleTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftHandMiddleTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftHandPinkyTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftHandPinkyTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -889);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftHandPinkyTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -888, sipPySelf);
        sipKeepReference(sipPySelf, -889, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftHandPinkyTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftHandPinkyTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftHandPinkyTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftHandRingTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftHandRingTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -891);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftHandRingTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -890, sipPySelf);
        sipKeepReference(sipPySelf, -891, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftHandRingTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftHandRingTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftHandRingTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftHandThumbTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftHandThumbTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -893);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftHandThumbTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -892, sipPySelf);
        sipKeepReference(sipPySelf, -893, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftHandThumbTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftHandThumbTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftHandThumbTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftKneeKillPitch(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftKneeKillPitch(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -895);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftKneeKillPitch;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -894, sipPySelf);
        sipKeepReference(sipPySelf, -895, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftKneeKillPitch(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftKneeKillPitch(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftKneeKillPitch = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftLegMaxExtensionAngle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftLegMaxExtensionAngle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -897);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftLegMaxExtensionAngle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -896, sipPySelf);
        sipKeepReference(sipPySelf, -897, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftLegMaxExtensionAngle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftLegMaxExtensionAngle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftLegMaxExtensionAngle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftLegRoll(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftLegRoll(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -899);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftLegRoll;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -898, sipPySelf);
        sipKeepReference(sipPySelf, -899, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftLegRoll(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftLegRoll(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftLegRoll = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftLegRollEx(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftLegRollEx(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -901);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftLegRollEx;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -900, sipPySelf);
        sipKeepReference(sipPySelf, -901, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftLegRollEx(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftLegRollEx(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftLegRollEx = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftLegRollExMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftLegRollExMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -903);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftLegRollExMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -902, sipPySelf);
        sipKeepReference(sipPySelf, -903, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftLegRollExMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftLegRollExMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftLegRollExMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftLegRollMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftLegRollMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -905);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftLegRollMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -904, sipPySelf);
        sipKeepReference(sipPySelf, -905, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftLegRollMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftLegRollMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftLegRollMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftUpLegRoll(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftUpLegRoll(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -907);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftUpLegRoll;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -906, sipPySelf);
        sipKeepReference(sipPySelf, -907, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftUpLegRoll(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftUpLegRoll(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftUpLegRoll = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftUpLegRollEx(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftUpLegRollEx(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -909);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftUpLegRollEx;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -908, sipPySelf);
        sipKeepReference(sipPySelf, -909, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftUpLegRollEx(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftUpLegRollEx(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftUpLegRollEx = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftUpLegRollExMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftUpLegRollExMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -911);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftUpLegRollExMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -910, sipPySelf);
        sipKeepReference(sipPySelf, -911, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftUpLegRollExMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftUpLegRollExMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftUpLegRollExMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LeftUpLegRollMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LeftUpLegRollMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -913);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LeftUpLegRollMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -912, sipPySelf);
        sipKeepReference(sipPySelf, -913, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LeftUpLegRollMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LeftUpLegRollMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LeftUpLegRollMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_Lock(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_Lock(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -915);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->Lock;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -914, sipPySelf);
        sipKeepReference(sipPySelf, -915, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_Lock(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_Lock(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->Lock = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LockPick(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LockPick(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -917);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LockPick;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -916, sipPySelf);
        sipKeepReference(sipPySelf, -917, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LockPick(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LockPick(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LockPick = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_LockXForm(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_LockXForm(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -919);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->LockXForm;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -918, sipPySelf);
        sipKeepReference(sipPySelf, -919, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_LockXForm(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_LockXForm(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->LockXForm = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_MassCenterCompensation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_MassCenterCompensation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -921);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->MassCenterCompensation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -920, sipPySelf);
        sipKeepReference(sipPySelf, -921, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_MassCenterCompensation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_MassCenterCompensation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->MassCenterCompensation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_MirrorMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_MirrorMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -923);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->MirrorMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -922, sipPySelf);
        sipKeepReference(sipPySelf, -923, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_MirrorMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_MirrorMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->MirrorMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_NeckReduction(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_NeckReduction(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -925);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->NeckReduction;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -924, sipPySelf);
        sipKeepReference(sipPySelf, -925, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_NeckReduction(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_NeckReduction(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->NeckReduction = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_OrientationDamping(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_OrientationDamping(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -927);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->OrientationDamping;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -926, sipPySelf);
        sipKeepReference(sipPySelf, -927, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_OrientationDamping(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_OrientationDamping(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->OrientationDamping = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_OrientationDampingMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_OrientationDampingMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -929);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->OrientationDampingMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -928, sipPySelf);
        sipKeepReference(sipPySelf, -929, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_OrientationDampingMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_OrientationDampingMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEOffAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->OrientationDampingMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_Posture(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_Posture(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEPostureMode*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -931);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->Posture;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEPostureMode, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -930, sipPySelf);
        sipKeepReference(sipPySelf, -931, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_Posture(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_Posture(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEPostureMode*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEPostureMode *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEPostureMode, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->Posture = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_PullIterationCount(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_PullIterationCount(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyInteger1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -933);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->PullIterationCount;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyInteger1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -932, sipPySelf);
        sipKeepReference(sipPySelf, -933, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_PullIterationCount(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_PullIterationCount(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyInteger1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyInteger1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyInteger1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->PullIterationCount = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorChest(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorChest(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -935);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorChest;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -934, sipPySelf);
        sipKeepReference(sipPySelf, -935, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorChest(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorChest(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorChest = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorChestRotation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorChestRotation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -937);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorChestRotation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -936, sipPySelf);
        sipKeepReference(sipPySelf, -937, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorChestRotation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorChestRotation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorChestRotation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorHead(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorHead(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -939);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorHead;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -938, sipPySelf);
        sipKeepReference(sipPySelf, -939, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorHead(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorHead(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorHead = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorHeadRotation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorHeadRotation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -941);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorHeadRotation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -940, sipPySelf);
        sipKeepReference(sipPySelf, -941, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorHeadRotation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorHeadRotation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorHeadRotation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorLeftAnkle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorLeftAnkle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -943);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorLeftAnkle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -942, sipPySelf);
        sipKeepReference(sipPySelf, -943, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorLeftAnkle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorLeftAnkle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorLeftAnkle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorLeftAnkleRotation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorLeftAnkleRotation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -945);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorLeftAnkleRotation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -944, sipPySelf);
        sipKeepReference(sipPySelf, -945, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorLeftAnkleRotation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorLeftAnkleRotation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorLeftAnkleRotation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorLeftElbow(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorLeftElbow(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -947);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorLeftElbow;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -946, sipPySelf);
        sipKeepReference(sipPySelf, -947, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorLeftElbow(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorLeftElbow(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorLeftElbow = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorLeftFingerBase(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorLeftFingerBase(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -949);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorLeftFingerBase;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -948, sipPySelf);
        sipKeepReference(sipPySelf, -949, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorLeftFingerBase(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorLeftFingerBase(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorLeftFingerBase = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorLeftFingerBaseRotation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorLeftFingerBaseRotation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -951);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorLeftFingerBaseRotation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -950, sipPySelf);
        sipKeepReference(sipPySelf, -951, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorLeftFingerBaseRotation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorLeftFingerBaseRotation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorLeftFingerBaseRotation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorLeftKnee(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorLeftKnee(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -953);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorLeftKnee;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -952, sipPySelf);
        sipKeepReference(sipPySelf, -953, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorLeftKnee(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorLeftKnee(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorLeftKnee = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorLeftToesBase(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorLeftToesBase(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -955);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorLeftToesBase;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -954, sipPySelf);
        sipKeepReference(sipPySelf, -955, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorLeftToesBase(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorLeftToesBase(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorLeftToesBase = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorLeftToesBaseRotation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorLeftToesBaseRotation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -957);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorLeftToesBaseRotation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -956, sipPySelf);
        sipKeepReference(sipPySelf, -957, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorLeftToesBaseRotation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorLeftToesBaseRotation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorLeftToesBaseRotation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorLeftWrist(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorLeftWrist(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -959);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorLeftWrist;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -958, sipPySelf);
        sipKeepReference(sipPySelf, -959, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorLeftWrist(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorLeftWrist(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorLeftWrist = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorLeftWristRotation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorLeftWristRotation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -961);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorLeftWristRotation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -960, sipPySelf);
        sipKeepReference(sipPySelf, -961, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorLeftWristRotation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorLeftWristRotation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorLeftWristRotation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorLowerChestRotation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorLowerChestRotation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -963);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorLowerChestRotation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -962, sipPySelf);
        sipKeepReference(sipPySelf, -963, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorLowerChestRotation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorLowerChestRotation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorLowerChestRotation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorRightAnkle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorRightAnkle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -965);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorRightAnkle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -964, sipPySelf);
        sipKeepReference(sipPySelf, -965, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorRightAnkle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorRightAnkle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorRightAnkle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorRightAnkleRotation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorRightAnkleRotation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -967);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorRightAnkleRotation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -966, sipPySelf);
        sipKeepReference(sipPySelf, -967, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorRightAnkleRotation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorRightAnkleRotation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorRightAnkleRotation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorRightElbow(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorRightElbow(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -969);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorRightElbow;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -968, sipPySelf);
        sipKeepReference(sipPySelf, -969, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorRightElbow(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorRightElbow(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorRightElbow = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorRightFingerBase(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorRightFingerBase(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -971);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorRightFingerBase;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -970, sipPySelf);
        sipKeepReference(sipPySelf, -971, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorRightFingerBase(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorRightFingerBase(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorRightFingerBase = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorRightFingerBaseRotation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorRightFingerBaseRotation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -973);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorRightFingerBaseRotation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -972, sipPySelf);
        sipKeepReference(sipPySelf, -973, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorRightFingerBaseRotation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorRightFingerBaseRotation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorRightFingerBaseRotation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorRightKnee(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorRightKnee(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -975);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorRightKnee;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -974, sipPySelf);
        sipKeepReference(sipPySelf, -975, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorRightKnee(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorRightKnee(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorRightKnee = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorRightToesBase(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorRightToesBase(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -977);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorRightToesBase;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -976, sipPySelf);
        sipKeepReference(sipPySelf, -977, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorRightToesBase(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorRightToesBase(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorRightToesBase = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorRightToesBaseRotation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorRightToesBaseRotation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -979);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorRightToesBaseRotation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -978, sipPySelf);
        sipKeepReference(sipPySelf, -979, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorRightToesBaseRotation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorRightToesBaseRotation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorRightToesBaseRotation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorRightWrist(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorRightWrist(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -981);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorRightWrist;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -980, sipPySelf);
        sipKeepReference(sipPySelf, -981, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorRightWrist(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorRightWrist(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorRightWrist = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ReachActorRightWristRotation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ReachActorRightWristRotation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -983);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ReachActorRightWristRotation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -982, sipPySelf);
        sipKeepReference(sipPySelf, -983, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ReachActorRightWristRotation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ReachActorRightWristRotation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ReachActorRightWristRotation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RealisticShoulder(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RealisticShoulder(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -985);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RealisticShoulder;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -984, sipPySelf);
        sipKeepReference(sipPySelf, -985, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RealisticShoulder(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RealisticShoulder(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RealisticShoulder = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightArmMaxExtensionAngle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightArmMaxExtensionAngle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -987);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightArmMaxExtensionAngle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -986, sipPySelf);
        sipKeepReference(sipPySelf, -987, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightArmMaxExtensionAngle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightArmMaxExtensionAngle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightArmMaxExtensionAngle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightArmRoll(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightArmRoll(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -989);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightArmRoll;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -988, sipPySelf);
        sipKeepReference(sipPySelf, -989, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightArmRoll(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightArmRoll(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightArmRoll = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightArmRollEx(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightArmRollEx(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -991);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightArmRollEx;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -990, sipPySelf);
        sipKeepReference(sipPySelf, -991, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightArmRollEx(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightArmRollEx(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightArmRollEx = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightArmRollExMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightArmRollExMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -993);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightArmRollExMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -992, sipPySelf);
        sipKeepReference(sipPySelf, -993, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightArmRollExMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightArmRollExMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightArmRollExMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightArmRollMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightArmRollMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -995);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightArmRollMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -994, sipPySelf);
        sipKeepReference(sipPySelf, -995, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightArmRollMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightArmRollMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightArmRollMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightElbowKillPitch(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightElbowKillPitch(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -997);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightElbowKillPitch;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -996, sipPySelf);
        sipKeepReference(sipPySelf, -997, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightElbowKillPitch(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightElbowKillPitch(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightElbowKillPitch = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightFootExtraFingerTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightFootExtraFingerTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -999);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightFootExtraFingerTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -998, sipPySelf);
        sipKeepReference(sipPySelf, -999, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightFootExtraFingerTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightFootExtraFingerTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightFootExtraFingerTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightFootIndexTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightFootIndexTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1001);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightFootIndexTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1000, sipPySelf);
        sipKeepReference(sipPySelf, -1001, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightFootIndexTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightFootIndexTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightFootIndexTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightFootMiddleTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightFootMiddleTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1003);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightFootMiddleTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1002, sipPySelf);
        sipKeepReference(sipPySelf, -1003, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightFootMiddleTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightFootMiddleTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightFootMiddleTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightFootPinkyTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightFootPinkyTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1005);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightFootPinkyTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1004, sipPySelf);
        sipKeepReference(sipPySelf, -1005, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightFootPinkyTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightFootPinkyTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightFootPinkyTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightFootRingTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightFootRingTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1007);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightFootRingTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1006, sipPySelf);
        sipKeepReference(sipPySelf, -1007, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightFootRingTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightFootRingTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightFootRingTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightFootThumbTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightFootThumbTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1009);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightFootThumbTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1008, sipPySelf);
        sipKeepReference(sipPySelf, -1009, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightFootThumbTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightFootThumbTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightFootThumbTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightForeArmExRoll(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightForeArmExRoll(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1011);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightForeArmExRoll;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1010, sipPySelf);
        sipKeepReference(sipPySelf, -1011, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightForeArmExRoll(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightForeArmExRoll(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightForeArmExRoll = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightForeArmRoll(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightForeArmRoll(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1013);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightForeArmRoll;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1012, sipPySelf);
        sipKeepReference(sipPySelf, -1013, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightForeArmRoll(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightForeArmRoll(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightForeArmRoll = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightForeArmRollExMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightForeArmRollExMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1015);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightForeArmRollExMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1014, sipPySelf);
        sipKeepReference(sipPySelf, -1015, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightForeArmRollExMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightForeArmRollExMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightForeArmRollExMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightForeArmRollMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightForeArmRollMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1017);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightForeArmRollMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1016, sipPySelf);
        sipKeepReference(sipPySelf, -1017, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightForeArmRollMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightForeArmRollMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightForeArmRollMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightHandExtraFingerTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightHandExtraFingerTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1019);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightHandExtraFingerTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1018, sipPySelf);
        sipKeepReference(sipPySelf, -1019, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightHandExtraFingerTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightHandExtraFingerTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightHandExtraFingerTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightHandIndexTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightHandIndexTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1021);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightHandIndexTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1020, sipPySelf);
        sipKeepReference(sipPySelf, -1021, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightHandIndexTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightHandIndexTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightHandIndexTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightHandMiddleTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightHandMiddleTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1023);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightHandMiddleTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1022, sipPySelf);
        sipKeepReference(sipPySelf, -1023, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightHandMiddleTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightHandMiddleTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightHandMiddleTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightHandPinkyTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightHandPinkyTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1025);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightHandPinkyTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1024, sipPySelf);
        sipKeepReference(sipPySelf, -1025, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightHandPinkyTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightHandPinkyTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightHandPinkyTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightHandRingTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightHandRingTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1027);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightHandRingTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1026, sipPySelf);
        sipKeepReference(sipPySelf, -1027, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightHandRingTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightHandRingTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightHandRingTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightHandThumbTip(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightHandThumbTip(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1029);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightHandThumbTip;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1028, sipPySelf);
        sipKeepReference(sipPySelf, -1029, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightHandThumbTip(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightHandThumbTip(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightHandThumbTip = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightKneeKillPitch(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightKneeKillPitch(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1031);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightKneeKillPitch;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1030, sipPySelf);
        sipKeepReference(sipPySelf, -1031, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightKneeKillPitch(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightKneeKillPitch(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightKneeKillPitch = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightLegMaxExtensionAngle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightLegMaxExtensionAngle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1033);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightLegMaxExtensionAngle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1032, sipPySelf);
        sipKeepReference(sipPySelf, -1033, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightLegMaxExtensionAngle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightLegMaxExtensionAngle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightLegMaxExtensionAngle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightLegRoll(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightLegRoll(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1035);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightLegRoll;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1034, sipPySelf);
        sipKeepReference(sipPySelf, -1035, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightLegRoll(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightLegRoll(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightLegRoll = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightLegRollEx(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightLegRollEx(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1037);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightLegRollEx;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1036, sipPySelf);
        sipKeepReference(sipPySelf, -1037, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightLegRollEx(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightLegRollEx(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightLegRollEx = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightLegRollExMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightLegRollExMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1039);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightLegRollExMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1038, sipPySelf);
        sipKeepReference(sipPySelf, -1039, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightLegRollExMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightLegRollExMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightLegRollExMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightLegRollMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightLegRollMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1041);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightLegRollMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1040, sipPySelf);
        sipKeepReference(sipPySelf, -1041, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightLegRollMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightLegRollMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightLegRollMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightUpLegRoll(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightUpLegRoll(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1043);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightUpLegRoll;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1042, sipPySelf);
        sipKeepReference(sipPySelf, -1043, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightUpLegRoll(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightUpLegRoll(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightUpLegRoll = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightUpLegRollEx(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightUpLegRollEx(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1045);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightUpLegRollEx;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1044, sipPySelf);
        sipKeepReference(sipPySelf, -1045, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightUpLegRollEx(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightUpLegRollEx(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightUpLegRollEx = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightUpLegRollExMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightUpLegRollExMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1047);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightUpLegRollExMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1046, sipPySelf);
        sipKeepReference(sipPySelf, -1047, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightUpLegRollExMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightUpLegRollExMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightUpLegRollExMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RightUpLegRollMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RightUpLegRollMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1049);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RightUpLegRollMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1048, sipPySelf);
        sipKeepReference(sipPySelf, -1049, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RightUpLegRollMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RightUpLegRollMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RightUpLegRollMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_RollExtractionMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_RollExtractionMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterERollExtractionMode*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1051);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->RollExtractionMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterERollExtractionMode, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1050, sipPySelf);
        sipKeepReference(sipPySelf, -1051, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_RollExtractionMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_RollExtractionMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterERollExtractionMode*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterERollExtractionMode *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterERollExtractionMode, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->RollExtractionMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ScaleCompensation(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ScaleCompensation(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1053);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ScaleCompensation;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1052, sipPySelf);
        sipKeepReference(sipPySelf, -1053, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ScaleCompensation(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ScaleCompensation(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ScaleCompensation = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ScaleCompensationMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ScaleCompensationMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1055);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ScaleCompensationMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1054, sipPySelf);
        sipKeepReference(sipPySelf, -1055, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ScaleCompensationMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ScaleCompensationMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEOffAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEOffAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEOffAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ScaleCompensationMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_ShoulderCorrection(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_ShoulderCorrection(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1057);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->ShoulderCorrection;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1056, sipPySelf);
        sipKeepReference(sipPySelf, -1057, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_ShoulderCorrection(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_ShoulderCorrection(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ShoulderCorrection = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SnSNeckFreedom(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SnSNeckFreedom(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1059);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SnSNeckFreedom;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1058, sipPySelf);
        sipKeepReference(sipPySelf, -1059, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SnSNeckFreedom(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SnSNeckFreedom(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SnSNeckFreedom = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SnSReachChestEnd(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SnSReachChestEnd(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1061);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SnSReachChestEnd;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1060, sipPySelf);
        sipKeepReference(sipPySelf, -1061, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SnSReachChestEnd(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SnSReachChestEnd(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SnSReachChestEnd = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SnSReachHead(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SnSReachHead(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1063);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SnSReachHead;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1062, sipPySelf);
        sipKeepReference(sipPySelf, -1063, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SnSReachHead(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SnSReachHead(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SnSReachHead = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SnSReachLeftAnkle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SnSReachLeftAnkle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1065);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SnSReachLeftAnkle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1064, sipPySelf);
        sipKeepReference(sipPySelf, -1065, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SnSReachLeftAnkle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SnSReachLeftAnkle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SnSReachLeftAnkle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SnSReachLeftWrist(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SnSReachLeftWrist(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1067);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SnSReachLeftWrist;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1066, sipPySelf);
        sipKeepReference(sipPySelf, -1067, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SnSReachLeftWrist(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SnSReachLeftWrist(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SnSReachLeftWrist = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SnSReachRightAnkle(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SnSReachRightAnkle(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1069);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SnSReachRightAnkle;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1068, sipPySelf);
        sipKeepReference(sipPySelf, -1069, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SnSReachRightAnkle(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SnSReachRightAnkle(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SnSReachRightAnkle = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SnSReachRightWrist(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SnSReachRightWrist(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1071);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SnSReachRightWrist;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1070, sipPySelf);
        sipKeepReference(sipPySelf, -1071, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SnSReachRightWrist(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SnSReachRightWrist(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SnSReachRightWrist = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SnSScaleArmsAndLegs(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SnSScaleArmsAndLegs(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1073);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SnSScaleArmsAndLegs;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1072, sipPySelf);
        sipKeepReference(sipPySelf, -1073, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SnSScaleArmsAndLegs(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SnSScaleArmsAndLegs(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SnSScaleArmsAndLegs = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SnSScaleNeck(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SnSScaleNeck(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1075);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SnSScaleNeck;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1074, sipPySelf);
        sipKeepReference(sipPySelf, -1075, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SnSScaleNeck(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SnSScaleNeck(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SnSScaleNeck = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SnSScaleSpine(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SnSScaleSpine(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1077);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SnSScaleSpine;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1076, sipPySelf);
        sipKeepReference(sipPySelf, -1077, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SnSScaleSpine(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SnSScaleSpine(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SnSScaleSpine = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SnSScaleSpineChildren(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SnSScaleSpineChildren(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1079);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SnSScaleSpineChildren;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1078, sipPySelf);
        sipKeepReference(sipPySelf, -1079, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SnSScaleSpineChildren(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SnSScaleSpineChildren(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SnSScaleSpineChildren = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SnSSpineFreedom(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SnSSpineFreedom(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1081);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SnSSpineFreedom;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1080, sipPySelf);
        sipKeepReference(sipPySelf, -1081, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SnSSpineFreedom(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SnSSpineFreedom(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SnSSpineFreedom = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SourceObject(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SourceObject(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxReference*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1083);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SourceObject;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxReference, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1082, sipPySelf);
        sipKeepReference(sipPySelf, -1083, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SourceObject(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SourceObject(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxReference*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxReference *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxReference, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SourceObject = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_Stabilization(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_Stabilization(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1085);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->Stabilization;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1084, sipPySelf);
        sipKeepReference(sipPySelf, -1085, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_Stabilization(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_Stabilization(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->Stabilization = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_StretchStartArmsAndLegs(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_StretchStartArmsAndLegs(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1087);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->StretchStartArmsAndLegs;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1086, sipPySelf);
        sipKeepReference(sipPySelf, -1087, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_StretchStartArmsAndLegs(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_StretchStartArmsAndLegs(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->StretchStartArmsAndLegs = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_StretchStopArmsAndLegs(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_StretchStopArmsAndLegs(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1089);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->StretchStopArmsAndLegs;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1088, sipPySelf);
        sipKeepReference(sipPySelf, -1089, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_StretchStopArmsAndLegs(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_StretchStopArmsAndLegs(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->StretchStopArmsAndLegs = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_SyncMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_SyncMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1091);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->SyncMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1090, sipPySelf);
        sipKeepReference(sipPySelf, -1091, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_SyncMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_SyncMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->SyncMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_Weight(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_Weight(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1093);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->Weight;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1092, sipPySelf);
        sipKeepReference(sipPySelf, -1093, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_Weight(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_Weight(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->Weight = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_WristDisplacementDamping(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_WristDisplacementDamping(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1095);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->WristDisplacementDamping;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyDouble1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1094, sipPySelf);
        sipKeepReference(sipPySelf, -1095, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_WristDisplacementDamping(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_WristDisplacementDamping(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyDouble1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyDouble1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyDouble1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->WristDisplacementDamping = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_WristDisplacementDampingMode(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_WristDisplacementDampingMode(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyFbxCharacterEAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1097);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->WristDisplacementDampingMode;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyFbxCharacterEAutoUser, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1096, sipPySelf);
        sipKeepReference(sipPySelf, -1097, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_WristDisplacementDampingMode(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_WristDisplacementDampingMode(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxCharacterEAutoUser*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyFbxCharacterEAutoUser *>(sipForceConvertToType(sipPy, sipType_FbxPropertyFbxCharacterEAutoUser, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->WristDisplacementDampingMode = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxCharacter_WriteReference(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxCharacter_WriteReference(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    sipPy = sipGetReference(sipPySelf, -1099);

    if (sipPy)
        return sipPy;

    sipVal = &sipCpp->WriteReference;

    sipPy = sipConvertFromType(sipVal, sipType_FbxPropertyBool1, SIP_NULLPTR);

    if (sipPy)
    {
        sipKeepReference(sipPy, -1098, sipPySelf);
        sipKeepReference(sipPySelf, -1099, sipPy);
    }

    return sipPy;
}


extern "C" {static int varset_FbxCharacter_WriteReference(void *, PyObject *, PyObject *);}
static int varset_FbxCharacter_WriteReference(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyBool1*sipVal;
     ::FbxCharacter *sipCpp = reinterpret_cast< ::FbxCharacter *>(sipSelf);

    int sipIsErr = 0;
    sipVal = reinterpret_cast< ::FbxPropertyBool1 *>(sipForceConvertToType(sipPy, sipType_FbxPropertyBool1, SIP_NULLPTR, SIP_NOT_NONE, SIP_NULLPTR, &sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->WriteReference = *sipVal;

    return 0;
}

sipVariableDef variables_FbxCharacter[] = {
    {InstanceVariable, sipName_Active, (PyMethodDef *)varget_FbxCharacter_Active, (PyMethodDef *)varset_FbxCharacter_Active, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_Actor, (PyMethodDef *)varget_FbxCharacter_Actor, (PyMethodDef *)varset_FbxCharacter_Actor, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleDisplacementDamping, (PyMethodDef *)varget_FbxCharacter_AnkleDisplacementDamping, (PyMethodDef *)varset_FbxCharacter_AnkleDisplacementDamping, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleDisplacementDampingMode, (PyMethodDef *)varget_FbxCharacter_AnkleDisplacementDampingMode, (PyMethodDef *)varset_FbxCharacter_AnkleDisplacementDampingMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleHeightCompensation, (PyMethodDef *)varget_FbxCharacter_AnkleHeightCompensation, (PyMethodDef *)varset_FbxCharacter_AnkleHeightCompensation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleHeightCompensationMode, (PyMethodDef *)varget_FbxCharacter_AnkleHeightCompensationMode, (PyMethodDef *)varset_FbxCharacter_AnkleHeightCompensationMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleProximityCompensation, (PyMethodDef *)varget_FbxCharacter_AnkleProximityCompensation, (PyMethodDef *)varset_FbxCharacter_AnkleProximityCompensation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleProximityCompensationMode, (PyMethodDef *)varget_FbxCharacter_AnkleProximityCompensationMode, (PyMethodDef *)varset_FbxCharacter_AnkleProximityCompensationMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleStabilizationAngularPerimeter, (PyMethodDef *)varget_FbxCharacter_AnkleStabilizationAngularPerimeter, (PyMethodDef *)varset_FbxCharacter_AnkleStabilizationAngularPerimeter, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleStabilizationAngularPerimeterMode, (PyMethodDef *)varget_FbxCharacter_AnkleStabilizationAngularPerimeterMode, (PyMethodDef *)varset_FbxCharacter_AnkleStabilizationAngularPerimeterMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleStabilizationDamping, (PyMethodDef *)varget_FbxCharacter_AnkleStabilizationDamping, (PyMethodDef *)varset_FbxCharacter_AnkleStabilizationDamping, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleStabilizationDampingMode, (PyMethodDef *)varget_FbxCharacter_AnkleStabilizationDampingMode, (PyMethodDef *)varset_FbxCharacter_AnkleStabilizationDampingMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleStabilizationFloorProximity, (PyMethodDef *)varget_FbxCharacter_AnkleStabilizationFloorProximity, (PyMethodDef *)varset_FbxCharacter_AnkleStabilizationFloorProximity, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleStabilizationFloorProximityMode, (PyMethodDef *)varget_FbxCharacter_AnkleStabilizationFloorProximityMode, (PyMethodDef *)varset_FbxCharacter_AnkleStabilizationFloorProximityMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleStabilizationPerimeter, (PyMethodDef *)varget_FbxCharacter_AnkleStabilizationPerimeter, (PyMethodDef *)varset_FbxCharacter_AnkleStabilizationPerimeter, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleStabilizationPerimeterMode, (PyMethodDef *)varget_FbxCharacter_AnkleStabilizationPerimeterMode, (PyMethodDef *)varset_FbxCharacter_AnkleStabilizationPerimeterMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleStabilizationRecoveryTime, (PyMethodDef *)varget_FbxCharacter_AnkleStabilizationRecoveryTime, (PyMethodDef *)varset_FbxCharacter_AnkleStabilizationRecoveryTime, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleStabilizationRecoveryTimeMode, (PyMethodDef *)varget_FbxCharacter_AnkleStabilizationRecoveryTimeMode, (PyMethodDef *)varset_FbxCharacter_AnkleStabilizationRecoveryTimeMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleStabilizationTime, (PyMethodDef *)varget_FbxCharacter_AnkleStabilizationTime, (PyMethodDef *)varset_FbxCharacter_AnkleStabilizationTime, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_AnkleStabilizationTimeMode, (PyMethodDef *)varget_FbxCharacter_AnkleStabilizationTimeMode, (PyMethodDef *)varset_FbxCharacter_AnkleStabilizationTimeMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ApplyLimits, (PyMethodDef *)varget_FbxCharacter_ApplyLimits, (PyMethodDef *)varset_FbxCharacter_ApplyLimits, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_Character, (PyMethodDef *)varget_FbxCharacter_Character, (PyMethodDef *)varset_FbxCharacter_Character, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_Characterize, (PyMethodDef *)varget_FbxCharacter_Characterize, (PyMethodDef *)varset_FbxCharacter_Characterize, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ChestReduction, (PyMethodDef *)varget_FbxCharacter_ChestReduction, (PyMethodDef *)varset_FbxCharacter_ChestReduction, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ChestTOffset, (PyMethodDef *)varget_FbxCharacter_ChestTOffset, (PyMethodDef *)varset_FbxCharacter_ChestTOffset, SIP_NULLPTR, SIP_NULLPTR},
    {ClassVariable, sipName_ClassId, (PyMethodDef *)varget_FbxCharacter_ClassId, (PyMethodDef *)varset_FbxCharacter_ClassId, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CollarReduction, (PyMethodDef *)varget_FbxCharacter_CollarReduction, (PyMethodDef *)varset_FbxCharacter_CollarReduction, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CollarStiffnessX, (PyMethodDef *)varget_FbxCharacter_CollarStiffnessX, (PyMethodDef *)varset_FbxCharacter_CollarStiffnessX, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CollarStiffnessY, (PyMethodDef *)varget_FbxCharacter_CollarStiffnessY, (PyMethodDef *)varset_FbxCharacter_CollarStiffnessY, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CollarStiffnessZ, (PyMethodDef *)varget_FbxCharacter_CollarStiffnessZ, (PyMethodDef *)varset_FbxCharacter_CollarStiffnessZ, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ContactBehaviour, (PyMethodDef *)varget_FbxCharacter_ContactBehaviour, (PyMethodDef *)varset_FbxCharacter_ContactBehaviour, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ControlSet, (PyMethodDef *)varget_FbxCharacter_ControlSet, (PyMethodDef *)varset_FbxCharacter_ControlSet, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlChestPullLeftHand, (PyMethodDef *)varget_FbxCharacter_CtrlChestPullLeftHand, (PyMethodDef *)varset_FbxCharacter_CtrlChestPullLeftHand, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlChestPullRightHand, (PyMethodDef *)varget_FbxCharacter_CtrlChestPullRightHand, (PyMethodDef *)varset_FbxCharacter_CtrlChestPullRightHand, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlEnforceGravity, (PyMethodDef *)varget_FbxCharacter_CtrlEnforceGravity, (PyMethodDef *)varset_FbxCharacter_CtrlEnforceGravity, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlNeckStiffness, (PyMethodDef *)varget_FbxCharacter_CtrlNeckStiffness, (PyMethodDef *)varset_FbxCharacter_CtrlNeckStiffness, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullHead, (PyMethodDef *)varget_FbxCharacter_CtrlPullHead, (PyMethodDef *)varset_FbxCharacter_CtrlPullHead, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullLeftElbow, (PyMethodDef *)varget_FbxCharacter_CtrlPullLeftElbow, (PyMethodDef *)varset_FbxCharacter_CtrlPullLeftElbow, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullLeftFingerBase, (PyMethodDef *)varget_FbxCharacter_CtrlPullLeftFingerBase, (PyMethodDef *)varset_FbxCharacter_CtrlPullLeftFingerBase, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullLeftFoot, (PyMethodDef *)varget_FbxCharacter_CtrlPullLeftFoot, (PyMethodDef *)varset_FbxCharacter_CtrlPullLeftFoot, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullLeftHand, (PyMethodDef *)varget_FbxCharacter_CtrlPullLeftHand, (PyMethodDef *)varset_FbxCharacter_CtrlPullLeftHand, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullLeftKnee, (PyMethodDef *)varget_FbxCharacter_CtrlPullLeftKnee, (PyMethodDef *)varset_FbxCharacter_CtrlPullLeftKnee, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullLeftToeBase, (PyMethodDef *)varget_FbxCharacter_CtrlPullLeftToeBase, (PyMethodDef *)varset_FbxCharacter_CtrlPullLeftToeBase, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullRightElbow, (PyMethodDef *)varget_FbxCharacter_CtrlPullRightElbow, (PyMethodDef *)varset_FbxCharacter_CtrlPullRightElbow, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullRightFingerBase, (PyMethodDef *)varget_FbxCharacter_CtrlPullRightFingerBase, (PyMethodDef *)varset_FbxCharacter_CtrlPullRightFingerBase, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullRightFoot, (PyMethodDef *)varget_FbxCharacter_CtrlPullRightFoot, (PyMethodDef *)varset_FbxCharacter_CtrlPullRightFoot, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullRightHand, (PyMethodDef *)varget_FbxCharacter_CtrlPullRightHand, (PyMethodDef *)varset_FbxCharacter_CtrlPullRightHand, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullRightKnee, (PyMethodDef *)varget_FbxCharacter_CtrlPullRightKnee, (PyMethodDef *)varset_FbxCharacter_CtrlPullRightKnee, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlPullRightToeBase, (PyMethodDef *)varget_FbxCharacter_CtrlPullRightToeBase, (PyMethodDef *)varset_FbxCharacter_CtrlPullRightToeBase, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistChestOrientation, (PyMethodDef *)varget_FbxCharacter_CtrlResistChestOrientation, (PyMethodDef *)varset_FbxCharacter_CtrlResistChestOrientation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistChestPosition, (PyMethodDef *)varget_FbxCharacter_CtrlResistChestPosition, (PyMethodDef *)varset_FbxCharacter_CtrlResistChestPosition, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistCompressionFactorLeftElbow, (PyMethodDef *)varget_FbxCharacter_CtrlResistCompressionFactorLeftElbow, (PyMethodDef *)varset_FbxCharacter_CtrlResistCompressionFactorLeftElbow, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistCompressionFactorLeftKnee, (PyMethodDef *)varget_FbxCharacter_CtrlResistCompressionFactorLeftKnee, (PyMethodDef *)varset_FbxCharacter_CtrlResistCompressionFactorLeftKnee, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistCompressionFactorRightElbow, (PyMethodDef *)varget_FbxCharacter_CtrlResistCompressionFactorRightElbow, (PyMethodDef *)varset_FbxCharacter_CtrlResistCompressionFactorRightElbow, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistCompressionFactorRightKnee, (PyMethodDef *)varget_FbxCharacter_CtrlResistCompressionFactorRightKnee, (PyMethodDef *)varset_FbxCharacter_CtrlResistCompressionFactorRightKnee, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistHipsOrientation, (PyMethodDef *)varget_FbxCharacter_CtrlResistHipsOrientation, (PyMethodDef *)varset_FbxCharacter_CtrlResistHipsOrientation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistHipsPosition, (PyMethodDef *)varget_FbxCharacter_CtrlResistHipsPosition, (PyMethodDef *)varset_FbxCharacter_CtrlResistHipsPosition, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistLeftCollar, (PyMethodDef *)varget_FbxCharacter_CtrlResistLeftCollar, (PyMethodDef *)varset_FbxCharacter_CtrlResistLeftCollar, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistLeftElbow, (PyMethodDef *)varget_FbxCharacter_CtrlResistLeftElbow, (PyMethodDef *)varset_FbxCharacter_CtrlResistLeftElbow, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistLeftKnee, (PyMethodDef *)varget_FbxCharacter_CtrlResistLeftKnee, (PyMethodDef *)varset_FbxCharacter_CtrlResistLeftKnee, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistMaximumExtensionLeftElbow, (PyMethodDef *)varget_FbxCharacter_CtrlResistMaximumExtensionLeftElbow, (PyMethodDef *)varset_FbxCharacter_CtrlResistMaximumExtensionLeftElbow, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistMaximumExtensionLeftKnee, (PyMethodDef *)varget_FbxCharacter_CtrlResistMaximumExtensionLeftKnee, (PyMethodDef *)varset_FbxCharacter_CtrlResistMaximumExtensionLeftKnee, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistMaximumExtensionRightElbow, (PyMethodDef *)varget_FbxCharacter_CtrlResistMaximumExtensionRightElbow, (PyMethodDef *)varset_FbxCharacter_CtrlResistMaximumExtensionRightElbow, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistMaximumExtensionRightKnee, (PyMethodDef *)varget_FbxCharacter_CtrlResistMaximumExtensionRightKnee, (PyMethodDef *)varset_FbxCharacter_CtrlResistMaximumExtensionRightKnee, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistRightCollar, (PyMethodDef *)varget_FbxCharacter_CtrlResistRightCollar, (PyMethodDef *)varset_FbxCharacter_CtrlResistRightCollar, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistRightElbow, (PyMethodDef *)varget_FbxCharacter_CtrlResistRightElbow, (PyMethodDef *)varset_FbxCharacter_CtrlResistRightElbow, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlResistRightKnee, (PyMethodDef *)varget_FbxCharacter_CtrlResistRightKnee, (PyMethodDef *)varset_FbxCharacter_CtrlResistRightKnee, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_CtrlSpineStiffness, (PyMethodDef *)varget_FbxCharacter_CtrlSpineStiffness, (PyMethodDef *)varset_FbxCharacter_CtrlSpineStiffness, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_Damping, (PyMethodDef *)varget_FbxCharacter_Damping, (PyMethodDef *)varset_FbxCharacter_Damping, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_DestinationObject, (PyMethodDef *)varget_FbxCharacter_DestinationObject, (PyMethodDef *)varset_FbxCharacter_DestinationObject, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_DisplacementDamping, (PyMethodDef *)varget_FbxCharacter_DisplacementDamping, (PyMethodDef *)varset_FbxCharacter_DisplacementDamping, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_DisplacementDampingMode, (PyMethodDef *)varget_FbxCharacter_DisplacementDampingMode, (PyMethodDef *)varset_FbxCharacter_DisplacementDampingMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_DisplacementMemory, (PyMethodDef *)varget_FbxCharacter_DisplacementMemory, (PyMethodDef *)varset_FbxCharacter_DisplacementMemory, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_DisplacementMemoryMode, (PyMethodDef *)varget_FbxCharacter_DisplacementMemoryMode, (PyMethodDef *)varset_FbxCharacter_DisplacementMemoryMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ExtraCollarRatio, (PyMethodDef *)varget_FbxCharacter_ExtraCollarRatio, (PyMethodDef *)varset_FbxCharacter_ExtraCollarRatio, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FingerSolving, (PyMethodDef *)varget_FbxCharacter_FingerSolving, (PyMethodDef *)varset_FbxCharacter_FingerSolving, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootAutomaticToes, (PyMethodDef *)varget_FbxCharacter_FootAutomaticToes, (PyMethodDef *)varset_FbxCharacter_FootAutomaticToes, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootBackToAnkle, (PyMethodDef *)varget_FbxCharacter_FootBackToAnkle, (PyMethodDef *)varset_FbxCharacter_FootBackToAnkle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootBottomToAnkle, (PyMethodDef *)varget_FbxCharacter_FootBottomToAnkle, (PyMethodDef *)varset_FbxCharacter_FootBottomToAnkle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootContactSize, (PyMethodDef *)varget_FbxCharacter_FootContactSize, (PyMethodDef *)varset_FbxCharacter_FootContactSize, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootContactStiffness, (PyMethodDef *)varget_FbxCharacter_FootContactStiffness, (PyMethodDef *)varset_FbxCharacter_FootContactStiffness, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootContactType, (PyMethodDef *)varget_FbxCharacter_FootContactType, (PyMethodDef *)varset_FbxCharacter_FootContactType, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootFingerContact, (PyMethodDef *)varget_FbxCharacter_FootFingerContact, (PyMethodDef *)varset_FbxCharacter_FootFingerContact, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootFingerContactMode, (PyMethodDef *)varget_FbxCharacter_FootFingerContactMode, (PyMethodDef *)varset_FbxCharacter_FootFingerContactMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootFingerContactRollStiffness, (PyMethodDef *)varget_FbxCharacter_FootFingerContactRollStiffness, (PyMethodDef *)varset_FbxCharacter_FootFingerContactRollStiffness, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootFloorContact, (PyMethodDef *)varget_FbxCharacter_FootFloorContact, (PyMethodDef *)varset_FbxCharacter_FootFloorContact, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootFloorPivot, (PyMethodDef *)varget_FbxCharacter_FootFloorPivot, (PyMethodDef *)varset_FbxCharacter_FootFloorPivot, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootFrontToMiddle, (PyMethodDef *)varget_FbxCharacter_FootFrontToMiddle, (PyMethodDef *)varset_FbxCharacter_FootFrontToMiddle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootInToAnkle, (PyMethodDef *)varget_FbxCharacter_FootInToAnkle, (PyMethodDef *)varset_FbxCharacter_FootInToAnkle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootMiddleToAnkle, (PyMethodDef *)varget_FbxCharacter_FootMiddleToAnkle, (PyMethodDef *)varset_FbxCharacter_FootMiddleToAnkle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_FootOutToAnkle, (PyMethodDef *)varget_FbxCharacter_FootOutToAnkle, (PyMethodDef *)varset_FbxCharacter_FootOutToAnkle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ForceActorSpace, (PyMethodDef *)varget_FbxCharacter_ForceActorSpace, (PyMethodDef *)varset_FbxCharacter_ForceActorSpace, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandAutomaticFingers, (PyMethodDef *)varget_FbxCharacter_HandAutomaticFingers, (PyMethodDef *)varset_FbxCharacter_HandAutomaticFingers, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandBackToWrist, (PyMethodDef *)varget_FbxCharacter_HandBackToWrist, (PyMethodDef *)varset_FbxCharacter_HandBackToWrist, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandBottomToWrist, (PyMethodDef *)varget_FbxCharacter_HandBottomToWrist, (PyMethodDef *)varset_FbxCharacter_HandBottomToWrist, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandContactSize, (PyMethodDef *)varget_FbxCharacter_HandContactSize, (PyMethodDef *)varset_FbxCharacter_HandContactSize, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandContactStiffness, (PyMethodDef *)varget_FbxCharacter_HandContactStiffness, (PyMethodDef *)varset_FbxCharacter_HandContactStiffness, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandContactType, (PyMethodDef *)varget_FbxCharacter_HandContactType, (PyMethodDef *)varset_FbxCharacter_HandContactType, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandFingerContact, (PyMethodDef *)varget_FbxCharacter_HandFingerContact, (PyMethodDef *)varset_FbxCharacter_HandFingerContact, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandFingerContactMode, (PyMethodDef *)varget_FbxCharacter_HandFingerContactMode, (PyMethodDef *)varset_FbxCharacter_HandFingerContactMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandFingerContactRollStiffness, (PyMethodDef *)varget_FbxCharacter_HandFingerContactRollStiffness, (PyMethodDef *)varset_FbxCharacter_HandFingerContactRollStiffness, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandFloorContact, (PyMethodDef *)varget_FbxCharacter_HandFloorContact, (PyMethodDef *)varset_FbxCharacter_HandFloorContact, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandFloorPivot, (PyMethodDef *)varget_FbxCharacter_HandFloorPivot, (PyMethodDef *)varset_FbxCharacter_HandFloorPivot, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandFrontToMiddle, (PyMethodDef *)varget_FbxCharacter_HandFrontToMiddle, (PyMethodDef *)varset_FbxCharacter_HandFrontToMiddle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandInToWrist, (PyMethodDef *)varget_FbxCharacter_HandInToWrist, (PyMethodDef *)varset_FbxCharacter_HandInToWrist, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandMiddleToWrist, (PyMethodDef *)varget_FbxCharacter_HandMiddleToWrist, (PyMethodDef *)varset_FbxCharacter_HandMiddleToWrist, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HandOutToWrist, (PyMethodDef *)varget_FbxCharacter_HandOutToWrist, (PyMethodDef *)varset_FbxCharacter_HandOutToWrist, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HeadReduction, (PyMethodDef *)varget_FbxCharacter_HeadReduction, (PyMethodDef *)varset_FbxCharacter_HeadReduction, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HikVersion, (PyMethodDef *)varget_FbxCharacter_HikVersion, (PyMethodDef *)varset_FbxCharacter_HikVersion, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HipsDisplacementDamping, (PyMethodDef *)varget_FbxCharacter_HipsDisplacementDamping, (PyMethodDef *)varset_FbxCharacter_HipsDisplacementDamping, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HipsDisplacementDampingMode, (PyMethodDef *)varget_FbxCharacter_HipsDisplacementDampingMode, (PyMethodDef *)varset_FbxCharacter_HipsDisplacementDampingMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HipsHeightCompensation, (PyMethodDef *)varget_FbxCharacter_HipsHeightCompensation, (PyMethodDef *)varset_FbxCharacter_HipsHeightCompensation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HipsHeightCompensationMode, (PyMethodDef *)varget_FbxCharacter_HipsHeightCompensationMode, (PyMethodDef *)varset_FbxCharacter_HipsHeightCompensationMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HipsTOffset, (PyMethodDef *)varget_FbxCharacter_HipsTOffset, (PyMethodDef *)varset_FbxCharacter_HipsTOffset, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_HipsTranslationMode, (PyMethodDef *)varget_FbxCharacter_HipsTranslationMode, (PyMethodDef *)varset_FbxCharacter_HipsTranslationMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftArmMaxExtensionAngle, (PyMethodDef *)varget_FbxCharacter_LeftArmMaxExtensionAngle, (PyMethodDef *)varset_FbxCharacter_LeftArmMaxExtensionAngle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftArmRoll, (PyMethodDef *)varget_FbxCharacter_LeftArmRoll, (PyMethodDef *)varset_FbxCharacter_LeftArmRoll, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftArmRollEx, (PyMethodDef *)varget_FbxCharacter_LeftArmRollEx, (PyMethodDef *)varset_FbxCharacter_LeftArmRollEx, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftArmRollExMode, (PyMethodDef *)varget_FbxCharacter_LeftArmRollExMode, (PyMethodDef *)varset_FbxCharacter_LeftArmRollExMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftArmRollMode, (PyMethodDef *)varget_FbxCharacter_LeftArmRollMode, (PyMethodDef *)varset_FbxCharacter_LeftArmRollMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftElbowKillPitch, (PyMethodDef *)varget_FbxCharacter_LeftElbowKillPitch, (PyMethodDef *)varset_FbxCharacter_LeftElbowKillPitch, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftFootExtraFingerTip, (PyMethodDef *)varget_FbxCharacter_LeftFootExtraFingerTip, (PyMethodDef *)varset_FbxCharacter_LeftFootExtraFingerTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftFootIndexTip, (PyMethodDef *)varget_FbxCharacter_LeftFootIndexTip, (PyMethodDef *)varset_FbxCharacter_LeftFootIndexTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftFootMiddleTip, (PyMethodDef *)varget_FbxCharacter_LeftFootMiddleTip, (PyMethodDef *)varset_FbxCharacter_LeftFootMiddleTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftFootPinkyTip, (PyMethodDef *)varget_FbxCharacter_LeftFootPinkyTip, (PyMethodDef *)varset_FbxCharacter_LeftFootPinkyTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftFootRingTip, (PyMethodDef *)varget_FbxCharacter_LeftFootRingTip, (PyMethodDef *)varset_FbxCharacter_LeftFootRingTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftFootThumbTip, (PyMethodDef *)varget_FbxCharacter_LeftFootThumbTip, (PyMethodDef *)varset_FbxCharacter_LeftFootThumbTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftForeArmRoll, (PyMethodDef *)varget_FbxCharacter_LeftForeArmRoll, (PyMethodDef *)varset_FbxCharacter_LeftForeArmRoll, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftForeArmRollEx, (PyMethodDef *)varget_FbxCharacter_LeftForeArmRollEx, (PyMethodDef *)varset_FbxCharacter_LeftForeArmRollEx, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftForeArmRollExMode, (PyMethodDef *)varget_FbxCharacter_LeftForeArmRollExMode, (PyMethodDef *)varset_FbxCharacter_LeftForeArmRollExMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftForeArmRollMode, (PyMethodDef *)varget_FbxCharacter_LeftForeArmRollMode, (PyMethodDef *)varset_FbxCharacter_LeftForeArmRollMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftHandExtraFingerTip, (PyMethodDef *)varget_FbxCharacter_LeftHandExtraFingerTip, (PyMethodDef *)varset_FbxCharacter_LeftHandExtraFingerTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftHandIndexTip, (PyMethodDef *)varget_FbxCharacter_LeftHandIndexTip, (PyMethodDef *)varset_FbxCharacter_LeftHandIndexTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftHandMiddleTip, (PyMethodDef *)varget_FbxCharacter_LeftHandMiddleTip, (PyMethodDef *)varset_FbxCharacter_LeftHandMiddleTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftHandPinkyTip, (PyMethodDef *)varget_FbxCharacter_LeftHandPinkyTip, (PyMethodDef *)varset_FbxCharacter_LeftHandPinkyTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftHandRingTip, (PyMethodDef *)varget_FbxCharacter_LeftHandRingTip, (PyMethodDef *)varset_FbxCharacter_LeftHandRingTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftHandThumbTip, (PyMethodDef *)varget_FbxCharacter_LeftHandThumbTip, (PyMethodDef *)varset_FbxCharacter_LeftHandThumbTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftKneeKillPitch, (PyMethodDef *)varget_FbxCharacter_LeftKneeKillPitch, (PyMethodDef *)varset_FbxCharacter_LeftKneeKillPitch, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftLegMaxExtensionAngle, (PyMethodDef *)varget_FbxCharacter_LeftLegMaxExtensionAngle, (PyMethodDef *)varset_FbxCharacter_LeftLegMaxExtensionAngle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftLegRoll, (PyMethodDef *)varget_FbxCharacter_LeftLegRoll, (PyMethodDef *)varset_FbxCharacter_LeftLegRoll, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftLegRollEx, (PyMethodDef *)varget_FbxCharacter_LeftLegRollEx, (PyMethodDef *)varset_FbxCharacter_LeftLegRollEx, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftLegRollExMode, (PyMethodDef *)varget_FbxCharacter_LeftLegRollExMode, (PyMethodDef *)varset_FbxCharacter_LeftLegRollExMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftLegRollMode, (PyMethodDef *)varget_FbxCharacter_LeftLegRollMode, (PyMethodDef *)varset_FbxCharacter_LeftLegRollMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftUpLegRoll, (PyMethodDef *)varget_FbxCharacter_LeftUpLegRoll, (PyMethodDef *)varset_FbxCharacter_LeftUpLegRoll, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftUpLegRollEx, (PyMethodDef *)varget_FbxCharacter_LeftUpLegRollEx, (PyMethodDef *)varset_FbxCharacter_LeftUpLegRollEx, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftUpLegRollExMode, (PyMethodDef *)varget_FbxCharacter_LeftUpLegRollExMode, (PyMethodDef *)varset_FbxCharacter_LeftUpLegRollExMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LeftUpLegRollMode, (PyMethodDef *)varget_FbxCharacter_LeftUpLegRollMode, (PyMethodDef *)varset_FbxCharacter_LeftUpLegRollMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_Lock, (PyMethodDef *)varget_FbxCharacter_Lock, (PyMethodDef *)varset_FbxCharacter_Lock, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LockPick, (PyMethodDef *)varget_FbxCharacter_LockPick, (PyMethodDef *)varset_FbxCharacter_LockPick, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_LockXForm, (PyMethodDef *)varget_FbxCharacter_LockXForm, (PyMethodDef *)varset_FbxCharacter_LockXForm, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_MassCenterCompensation, (PyMethodDef *)varget_FbxCharacter_MassCenterCompensation, (PyMethodDef *)varset_FbxCharacter_MassCenterCompensation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_MirrorMode, (PyMethodDef *)varget_FbxCharacter_MirrorMode, (PyMethodDef *)varset_FbxCharacter_MirrorMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_NeckReduction, (PyMethodDef *)varget_FbxCharacter_NeckReduction, (PyMethodDef *)varset_FbxCharacter_NeckReduction, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_OrientationDamping, (PyMethodDef *)varget_FbxCharacter_OrientationDamping, (PyMethodDef *)varset_FbxCharacter_OrientationDamping, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_OrientationDampingMode, (PyMethodDef *)varget_FbxCharacter_OrientationDampingMode, (PyMethodDef *)varset_FbxCharacter_OrientationDampingMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_Posture, (PyMethodDef *)varget_FbxCharacter_Posture, (PyMethodDef *)varset_FbxCharacter_Posture, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_PullIterationCount, (PyMethodDef *)varget_FbxCharacter_PullIterationCount, (PyMethodDef *)varset_FbxCharacter_PullIterationCount, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorChest, (PyMethodDef *)varget_FbxCharacter_ReachActorChest, (PyMethodDef *)varset_FbxCharacter_ReachActorChest, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorChestRotation, (PyMethodDef *)varget_FbxCharacter_ReachActorChestRotation, (PyMethodDef *)varset_FbxCharacter_ReachActorChestRotation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorHead, (PyMethodDef *)varget_FbxCharacter_ReachActorHead, (PyMethodDef *)varset_FbxCharacter_ReachActorHead, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorHeadRotation, (PyMethodDef *)varget_FbxCharacter_ReachActorHeadRotation, (PyMethodDef *)varset_FbxCharacter_ReachActorHeadRotation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorLeftAnkle, (PyMethodDef *)varget_FbxCharacter_ReachActorLeftAnkle, (PyMethodDef *)varset_FbxCharacter_ReachActorLeftAnkle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorLeftAnkleRotation, (PyMethodDef *)varget_FbxCharacter_ReachActorLeftAnkleRotation, (PyMethodDef *)varset_FbxCharacter_ReachActorLeftAnkleRotation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorLeftElbow, (PyMethodDef *)varget_FbxCharacter_ReachActorLeftElbow, (PyMethodDef *)varset_FbxCharacter_ReachActorLeftElbow, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorLeftFingerBase, (PyMethodDef *)varget_FbxCharacter_ReachActorLeftFingerBase, (PyMethodDef *)varset_FbxCharacter_ReachActorLeftFingerBase, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorLeftFingerBaseRotation, (PyMethodDef *)varget_FbxCharacter_ReachActorLeftFingerBaseRotation, (PyMethodDef *)varset_FbxCharacter_ReachActorLeftFingerBaseRotation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorLeftKnee, (PyMethodDef *)varget_FbxCharacter_ReachActorLeftKnee, (PyMethodDef *)varset_FbxCharacter_ReachActorLeftKnee, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorLeftToesBase, (PyMethodDef *)varget_FbxCharacter_ReachActorLeftToesBase, (PyMethodDef *)varset_FbxCharacter_ReachActorLeftToesBase, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorLeftToesBaseRotation, (PyMethodDef *)varget_FbxCharacter_ReachActorLeftToesBaseRotation, (PyMethodDef *)varset_FbxCharacter_ReachActorLeftToesBaseRotation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorLeftWrist, (PyMethodDef *)varget_FbxCharacter_ReachActorLeftWrist, (PyMethodDef *)varset_FbxCharacter_ReachActorLeftWrist, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorLeftWristRotation, (PyMethodDef *)varget_FbxCharacter_ReachActorLeftWristRotation, (PyMethodDef *)varset_FbxCharacter_ReachActorLeftWristRotation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorLowerChestRotation, (PyMethodDef *)varget_FbxCharacter_ReachActorLowerChestRotation, (PyMethodDef *)varset_FbxCharacter_ReachActorLowerChestRotation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorRightAnkle, (PyMethodDef *)varget_FbxCharacter_ReachActorRightAnkle, (PyMethodDef *)varset_FbxCharacter_ReachActorRightAnkle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorRightAnkleRotation, (PyMethodDef *)varget_FbxCharacter_ReachActorRightAnkleRotation, (PyMethodDef *)varset_FbxCharacter_ReachActorRightAnkleRotation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorRightElbow, (PyMethodDef *)varget_FbxCharacter_ReachActorRightElbow, (PyMethodDef *)varset_FbxCharacter_ReachActorRightElbow, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorRightFingerBase, (PyMethodDef *)varget_FbxCharacter_ReachActorRightFingerBase, (PyMethodDef *)varset_FbxCharacter_ReachActorRightFingerBase, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorRightFingerBaseRotation, (PyMethodDef *)varget_FbxCharacter_ReachActorRightFingerBaseRotation, (PyMethodDef *)varset_FbxCharacter_ReachActorRightFingerBaseRotation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorRightKnee, (PyMethodDef *)varget_FbxCharacter_ReachActorRightKnee, (PyMethodDef *)varset_FbxCharacter_ReachActorRightKnee, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorRightToesBase, (PyMethodDef *)varget_FbxCharacter_ReachActorRightToesBase, (PyMethodDef *)varset_FbxCharacter_ReachActorRightToesBase, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorRightToesBaseRotation, (PyMethodDef *)varget_FbxCharacter_ReachActorRightToesBaseRotation, (PyMethodDef *)varset_FbxCharacter_ReachActorRightToesBaseRotation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorRightWrist, (PyMethodDef *)varget_FbxCharacter_ReachActorRightWrist, (PyMethodDef *)varset_FbxCharacter_ReachActorRightWrist, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ReachActorRightWristRotation, (PyMethodDef *)varget_FbxCharacter_ReachActorRightWristRotation, (PyMethodDef *)varset_FbxCharacter_ReachActorRightWristRotation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RealisticShoulder, (PyMethodDef *)varget_FbxCharacter_RealisticShoulder, (PyMethodDef *)varset_FbxCharacter_RealisticShoulder, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightArmMaxExtensionAngle, (PyMethodDef *)varget_FbxCharacter_RightArmMaxExtensionAngle, (PyMethodDef *)varset_FbxCharacter_RightArmMaxExtensionAngle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightArmRoll, (PyMethodDef *)varget_FbxCharacter_RightArmRoll, (PyMethodDef *)varset_FbxCharacter_RightArmRoll, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightArmRollEx, (PyMethodDef *)varget_FbxCharacter_RightArmRollEx, (PyMethodDef *)varset_FbxCharacter_RightArmRollEx, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightArmRollExMode, (PyMethodDef *)varget_FbxCharacter_RightArmRollExMode, (PyMethodDef *)varset_FbxCharacter_RightArmRollExMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightArmRollMode, (PyMethodDef *)varget_FbxCharacter_RightArmRollMode, (PyMethodDef *)varset_FbxCharacter_RightArmRollMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightElbowKillPitch, (PyMethodDef *)varget_FbxCharacter_RightElbowKillPitch, (PyMethodDef *)varset_FbxCharacter_RightElbowKillPitch, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightFootExtraFingerTip, (PyMethodDef *)varget_FbxCharacter_RightFootExtraFingerTip, (PyMethodDef *)varset_FbxCharacter_RightFootExtraFingerTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightFootIndexTip, (PyMethodDef *)varget_FbxCharacter_RightFootIndexTip, (PyMethodDef *)varset_FbxCharacter_RightFootIndexTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightFootMiddleTip, (PyMethodDef *)varget_FbxCharacter_RightFootMiddleTip, (PyMethodDef *)varset_FbxCharacter_RightFootMiddleTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightFootPinkyTip, (PyMethodDef *)varget_FbxCharacter_RightFootPinkyTip, (PyMethodDef *)varset_FbxCharacter_RightFootPinkyTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightFootRingTip, (PyMethodDef *)varget_FbxCharacter_RightFootRingTip, (PyMethodDef *)varset_FbxCharacter_RightFootRingTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightFootThumbTip, (PyMethodDef *)varget_FbxCharacter_RightFootThumbTip, (PyMethodDef *)varset_FbxCharacter_RightFootThumbTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightForeArmExRoll, (PyMethodDef *)varget_FbxCharacter_RightForeArmExRoll, (PyMethodDef *)varset_FbxCharacter_RightForeArmExRoll, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightForeArmRoll, (PyMethodDef *)varget_FbxCharacter_RightForeArmRoll, (PyMethodDef *)varset_FbxCharacter_RightForeArmRoll, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightForeArmRollExMode, (PyMethodDef *)varget_FbxCharacter_RightForeArmRollExMode, (PyMethodDef *)varset_FbxCharacter_RightForeArmRollExMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightForeArmRollMode, (PyMethodDef *)varget_FbxCharacter_RightForeArmRollMode, (PyMethodDef *)varset_FbxCharacter_RightForeArmRollMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightHandExtraFingerTip, (PyMethodDef *)varget_FbxCharacter_RightHandExtraFingerTip, (PyMethodDef *)varset_FbxCharacter_RightHandExtraFingerTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightHandIndexTip, (PyMethodDef *)varget_FbxCharacter_RightHandIndexTip, (PyMethodDef *)varset_FbxCharacter_RightHandIndexTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightHandMiddleTip, (PyMethodDef *)varget_FbxCharacter_RightHandMiddleTip, (PyMethodDef *)varset_FbxCharacter_RightHandMiddleTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightHandPinkyTip, (PyMethodDef *)varget_FbxCharacter_RightHandPinkyTip, (PyMethodDef *)varset_FbxCharacter_RightHandPinkyTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightHandRingTip, (PyMethodDef *)varget_FbxCharacter_RightHandRingTip, (PyMethodDef *)varset_FbxCharacter_RightHandRingTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightHandThumbTip, (PyMethodDef *)varget_FbxCharacter_RightHandThumbTip, (PyMethodDef *)varset_FbxCharacter_RightHandThumbTip, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightKneeKillPitch, (PyMethodDef *)varget_FbxCharacter_RightKneeKillPitch, (PyMethodDef *)varset_FbxCharacter_RightKneeKillPitch, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightLegMaxExtensionAngle, (PyMethodDef *)varget_FbxCharacter_RightLegMaxExtensionAngle, (PyMethodDef *)varset_FbxCharacter_RightLegMaxExtensionAngle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightLegRoll, (PyMethodDef *)varget_FbxCharacter_RightLegRoll, (PyMethodDef *)varset_FbxCharacter_RightLegRoll, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightLegRollEx, (PyMethodDef *)varget_FbxCharacter_RightLegRollEx, (PyMethodDef *)varset_FbxCharacter_RightLegRollEx, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightLegRollExMode, (PyMethodDef *)varget_FbxCharacter_RightLegRollExMode, (PyMethodDef *)varset_FbxCharacter_RightLegRollExMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightLegRollMode, (PyMethodDef *)varget_FbxCharacter_RightLegRollMode, (PyMethodDef *)varset_FbxCharacter_RightLegRollMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightUpLegRoll, (PyMethodDef *)varget_FbxCharacter_RightUpLegRoll, (PyMethodDef *)varset_FbxCharacter_RightUpLegRoll, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightUpLegRollEx, (PyMethodDef *)varget_FbxCharacter_RightUpLegRollEx, (PyMethodDef *)varset_FbxCharacter_RightUpLegRollEx, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightUpLegRollExMode, (PyMethodDef *)varget_FbxCharacter_RightUpLegRollExMode, (PyMethodDef *)varset_FbxCharacter_RightUpLegRollExMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RightUpLegRollMode, (PyMethodDef *)varget_FbxCharacter_RightUpLegRollMode, (PyMethodDef *)varset_FbxCharacter_RightUpLegRollMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_RollExtractionMode, (PyMethodDef *)varget_FbxCharacter_RollExtractionMode, (PyMethodDef *)varset_FbxCharacter_RollExtractionMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ScaleCompensation, (PyMethodDef *)varget_FbxCharacter_ScaleCompensation, (PyMethodDef *)varset_FbxCharacter_ScaleCompensation, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ScaleCompensationMode, (PyMethodDef *)varget_FbxCharacter_ScaleCompensationMode, (PyMethodDef *)varset_FbxCharacter_ScaleCompensationMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_ShoulderCorrection, (PyMethodDef *)varget_FbxCharacter_ShoulderCorrection, (PyMethodDef *)varset_FbxCharacter_ShoulderCorrection, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SnSNeckFreedom, (PyMethodDef *)varget_FbxCharacter_SnSNeckFreedom, (PyMethodDef *)varset_FbxCharacter_SnSNeckFreedom, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SnSReachChestEnd, (PyMethodDef *)varget_FbxCharacter_SnSReachChestEnd, (PyMethodDef *)varset_FbxCharacter_SnSReachChestEnd, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SnSReachHead, (PyMethodDef *)varget_FbxCharacter_SnSReachHead, (PyMethodDef *)varset_FbxCharacter_SnSReachHead, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SnSReachLeftAnkle, (PyMethodDef *)varget_FbxCharacter_SnSReachLeftAnkle, (PyMethodDef *)varset_FbxCharacter_SnSReachLeftAnkle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SnSReachLeftWrist, (PyMethodDef *)varget_FbxCharacter_SnSReachLeftWrist, (PyMethodDef *)varset_FbxCharacter_SnSReachLeftWrist, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SnSReachRightAnkle, (PyMethodDef *)varget_FbxCharacter_SnSReachRightAnkle, (PyMethodDef *)varset_FbxCharacter_SnSReachRightAnkle, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SnSReachRightWrist, (PyMethodDef *)varget_FbxCharacter_SnSReachRightWrist, (PyMethodDef *)varset_FbxCharacter_SnSReachRightWrist, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SnSScaleArmsAndLegs, (PyMethodDef *)varget_FbxCharacter_SnSScaleArmsAndLegs, (PyMethodDef *)varset_FbxCharacter_SnSScaleArmsAndLegs, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SnSScaleNeck, (PyMethodDef *)varget_FbxCharacter_SnSScaleNeck, (PyMethodDef *)varset_FbxCharacter_SnSScaleNeck, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SnSScaleSpine, (PyMethodDef *)varget_FbxCharacter_SnSScaleSpine, (PyMethodDef *)varset_FbxCharacter_SnSScaleSpine, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SnSScaleSpineChildren, (PyMethodDef *)varget_FbxCharacter_SnSScaleSpineChildren, (PyMethodDef *)varset_FbxCharacter_SnSScaleSpineChildren, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SnSSpineFreedom, (PyMethodDef *)varget_FbxCharacter_SnSSpineFreedom, (PyMethodDef *)varset_FbxCharacter_SnSSpineFreedom, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SourceObject, (PyMethodDef *)varget_FbxCharacter_SourceObject, (PyMethodDef *)varset_FbxCharacter_SourceObject, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_Stabilization, (PyMethodDef *)varget_FbxCharacter_Stabilization, (PyMethodDef *)varset_FbxCharacter_Stabilization, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_StretchStartArmsAndLegs, (PyMethodDef *)varget_FbxCharacter_StretchStartArmsAndLegs, (PyMethodDef *)varset_FbxCharacter_StretchStartArmsAndLegs, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_StretchStopArmsAndLegs, (PyMethodDef *)varget_FbxCharacter_StretchStopArmsAndLegs, (PyMethodDef *)varset_FbxCharacter_StretchStopArmsAndLegs, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_SyncMode, (PyMethodDef *)varget_FbxCharacter_SyncMode, (PyMethodDef *)varset_FbxCharacter_SyncMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_Weight, (PyMethodDef *)varget_FbxCharacter_Weight, (PyMethodDef *)varset_FbxCharacter_Weight, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_WristDisplacementDamping, (PyMethodDef *)varget_FbxCharacter_WristDisplacementDamping, (PyMethodDef *)varset_FbxCharacter_WristDisplacementDamping, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_WristDisplacementDampingMode, (PyMethodDef *)varget_FbxCharacter_WristDisplacementDampingMode, (PyMethodDef *)varset_FbxCharacter_WristDisplacementDampingMode, SIP_NULLPTR, SIP_NULLPTR},
    {InstanceVariable, sipName_WriteReference, (PyMethodDef *)varget_FbxCharacter_WriteReference, (PyMethodDef *)varset_FbxCharacter_WriteReference, SIP_NULLPTR, SIP_NULLPTR},
};


/* Define the enum members and ints to be added to this type. */
static sipIntInstanceDef intInstances_FbxCharacter[] = {
    {sipName_eParamModeAuto2, static_cast<int>( ::FbxCharacter::eParamModeAuto2)},
    {sipName_eParamModeUser2, static_cast<int>( ::FbxCharacter::eParamModeUser2)},
    {sipName_eContactNeverSync, static_cast<int>( ::FbxCharacter::eContactNeverSync)},
    {sipName_eContactSyncOnKey, static_cast<int>( ::FbxCharacter::eContactSyncOnKey)},
    {sipName_eContactAlwaysSync, static_cast<int>( ::FbxCharacter::eContactAlwaysSync)},
    {sipName_eContactBehaviorCount, static_cast<int>( ::FbxCharacter::eContactBehaviorCount)},
    {sipName_eInternalError, static_cast<int>( ::FbxCharacter::eInternalError)},
    {sipName_eErrorCount, static_cast<int>( ::FbxCharacter::eErrorCount)},
    {sipName_eFingerContactModeSticky, static_cast<int>( ::FbxCharacter::eFingerContactModeSticky)},
    {sipName_eFingerContactModeSpread, static_cast<int>( ::FbxCharacter::eFingerContactModeSpread)},
    {sipName_eFingerContactModeStickySpread, static_cast<int>( ::FbxCharacter::eFingerContactModeStickySpread)},
    {sipName_eFingerContactModeCount, static_cast<int>( ::FbxCharacter::eFingerContactModeCount)},
    {sipName_eFloorPivotAuto, static_cast<int>( ::FbxCharacter::eFloorPivotAuto)},
    {sipName_eFloorPivotAnkle, static_cast<int>( ::FbxCharacter::eFloorPivotAnkle)},
    {sipName_eFloorPivotToes, static_cast<int>( ::FbxCharacter::eFloorPivotToes)},
    {sipName_eFloorPivotCount, static_cast<int>( ::FbxCharacter::eFloorPivotCount)},
    {sipName_eFootTypeNormal, static_cast<int>( ::FbxCharacter::eFootTypeNormal)},
    {sipName_eFootTypeAnkle, static_cast<int>( ::FbxCharacter::eFootTypeAnkle)},
    {sipName_eFootTypeToeBase, static_cast<int>( ::FbxCharacter::eFootTypeToeBase)},
    {sipName_eFootTypeHoof, static_cast<int>( ::FbxCharacter::eFootTypeHoof)},
    {sipName_eFootContactModeCount, static_cast<int>( ::FbxCharacter::eFootContactModeCount)},
    {sipName_eGroupBase, static_cast<int>( ::FbxCharacter::eGroupBase)},
    {sipName_eGroupAuxiliary, static_cast<int>( ::FbxCharacter::eGroupAuxiliary)},
    {sipName_eGroupSpine, static_cast<int>( ::FbxCharacter::eGroupSpine)},
    {sipName_eGroupRoll, static_cast<int>( ::FbxCharacter::eGroupRoll)},
    {sipName_eGroupSpecial, static_cast<int>( ::FbxCharacter::eGroupSpecial)},
    {sipName_eGroupLeftHand, static_cast<int>( ::FbxCharacter::eGroupLeftHand)},
    {sipName_eGroupRightHand, static_cast<int>( ::FbxCharacter::eGroupRightHand)},
    {sipName_eGroupProps, static_cast<int>( ::FbxCharacter::eGroupProps)},
    {sipName_eGroupGameModeParent, static_cast<int>( ::FbxCharacter::eGroupGameModeParent)},
    {sipName_eGroupNeck, static_cast<int>( ::FbxCharacter::eGroupNeck)},
    {sipName_eGroupLeftFoot, static_cast<int>( ::FbxCharacter::eGroupLeftFoot)},
    {sipName_eGroupRightFoot, static_cast<int>( ::FbxCharacter::eGroupRightFoot)},
    {sipName_eGroupFloorContact, static_cast<int>( ::FbxCharacter::eGroupFloorContact)},
    {sipName_eGroupIdCount, static_cast<int>( ::FbxCharacter::eGroupIdCount)},
    {sipName_eHandTypeNormal, static_cast<int>( ::FbxCharacter::eHandTypeNormal)},
    {sipName_eHandTypeWrist, static_cast<int>( ::FbxCharacter::eHandTypeWrist)},
    {sipName_eHandTypeFingerBase, static_cast<int>( ::FbxCharacter::eHandTypeFingerBase)},
    {sipName_eHandTypeHoof, static_cast<int>( ::FbxCharacter::eHandTypeHoof)},
    {sipName_eHandContactModeCount, static_cast<int>( ::FbxCharacter::eHandContactModeCount)},
    {sipName_eHipsTranslationWorldRigid, static_cast<int>( ::FbxCharacter::eHipsTranslationWorldRigid)},
    {sipName_eHipsTranslationBodyRigid, static_cast<int>( ::FbxCharacter::eHipsTranslationBodyRigid)},
    {sipName_eHipsTranslationTypeCount, static_cast<int>( ::FbxCharacter::eHipsTranslationTypeCount)},
    {sipName_eInputActor, static_cast<int>( ::FbxCharacter::eInputActor)},
    {sipName_eInputCharacter, static_cast<int>( ::FbxCharacter::eInputCharacter)},
    {sipName_eInputMarkerSet, static_cast<int>( ::FbxCharacter::eInputMarkerSet)},
    {sipName_eOutputMarkerSet, static_cast<int>( ::FbxCharacter::eOutputMarkerSet)},
    {sipName_eInputStancePose, static_cast<int>( ::FbxCharacter::eInputStancePose)},
    {sipName_eHips, static_cast<int>( ::FbxCharacter::eHips)},
    {sipName_eLeftHip, static_cast<int>( ::FbxCharacter::eLeftHip)},
    {sipName_eLeftKnee, static_cast<int>( ::FbxCharacter::eLeftKnee)},
    {sipName_eLeftAnkle, static_cast<int>( ::FbxCharacter::eLeftAnkle)},
    {sipName_eLeftFoot, static_cast<int>( ::FbxCharacter::eLeftFoot)},
    {sipName_eRightHip, static_cast<int>( ::FbxCharacter::eRightHip)},
    {sipName_eRightKnee, static_cast<int>( ::FbxCharacter::eRightKnee)},
    {sipName_eRightAnkle, static_cast<int>( ::FbxCharacter::eRightAnkle)},
    {sipName_eRightFoot, static_cast<int>( ::FbxCharacter::eRightFoot)},
    {sipName_eWaist, static_cast<int>( ::FbxCharacter::eWaist)},
    {sipName_eChest, static_cast<int>( ::FbxCharacter::eChest)},
    {sipName_eLeftCollar, static_cast<int>( ::FbxCharacter::eLeftCollar)},
    {sipName_eLeftShoulder, static_cast<int>( ::FbxCharacter::eLeftShoulder)},
    {sipName_eLeftElbow, static_cast<int>( ::FbxCharacter::eLeftElbow)},
    {sipName_eLeftWrist, static_cast<int>( ::FbxCharacter::eLeftWrist)},
    {sipName_eRightCollar, static_cast<int>( ::FbxCharacter::eRightCollar)},
    {sipName_eRightShoulder, static_cast<int>( ::FbxCharacter::eRightShoulder)},
    {sipName_eRightElbow, static_cast<int>( ::FbxCharacter::eRightElbow)},
    {sipName_eRightWrist, static_cast<int>( ::FbxCharacter::eRightWrist)},
    {sipName_eNeck, static_cast<int>( ::FbxCharacter::eNeck)},
    {sipName_eHead, static_cast<int>( ::FbxCharacter::eHead)},
    {sipName_eLeftHipRoll, static_cast<int>( ::FbxCharacter::eLeftHipRoll)},
    {sipName_eLeftKneeRoll, static_cast<int>( ::FbxCharacter::eLeftKneeRoll)},
    {sipName_eRightHipRoll, static_cast<int>( ::FbxCharacter::eRightHipRoll)},
    {sipName_eRightKneeRoll, static_cast<int>( ::FbxCharacter::eRightKneeRoll)},
    {sipName_eLeftShoulderRoll, static_cast<int>( ::FbxCharacter::eLeftShoulderRoll)},
    {sipName_eLeftElbowRoll, static_cast<int>( ::FbxCharacter::eLeftElbowRoll)},
    {sipName_eRightShoulderRoll, static_cast<int>( ::FbxCharacter::eRightShoulderRoll)},
    {sipName_eRightElbowRoll, static_cast<int>( ::FbxCharacter::eRightElbowRoll)},
    {sipName_eSpine2, static_cast<int>( ::FbxCharacter::eSpine2)},
    {sipName_eSpine3, static_cast<int>( ::FbxCharacter::eSpine3)},
    {sipName_eSpine4, static_cast<int>( ::FbxCharacter::eSpine4)},
    {sipName_eSpine5, static_cast<int>( ::FbxCharacter::eSpine5)},
    {sipName_eSpine6, static_cast<int>( ::FbxCharacter::eSpine6)},
    {sipName_eSpine7, static_cast<int>( ::FbxCharacter::eSpine7)},
    {sipName_eSpine8, static_cast<int>( ::FbxCharacter::eSpine8)},
    {sipName_eSpine9, static_cast<int>( ::FbxCharacter::eSpine9)},
    {sipName_eLeftThumbA, static_cast<int>( ::FbxCharacter::eLeftThumbA)},
    {sipName_eLeftThumbB, static_cast<int>( ::FbxCharacter::eLeftThumbB)},
    {sipName_eLeftThumbC, static_cast<int>( ::FbxCharacter::eLeftThumbC)},
    {sipName_eLeftIndexA, static_cast<int>( ::FbxCharacter::eLeftIndexA)},
    {sipName_eLeftIndexB, static_cast<int>( ::FbxCharacter::eLeftIndexB)},
    {sipName_eLeftIndexC, static_cast<int>( ::FbxCharacter::eLeftIndexC)},
    {sipName_eLeftMiddleA, static_cast<int>( ::FbxCharacter::eLeftMiddleA)},
    {sipName_eLeftMiddleB, static_cast<int>( ::FbxCharacter::eLeftMiddleB)},
    {sipName_eLeftMiddleC, static_cast<int>( ::FbxCharacter::eLeftMiddleC)},
    {sipName_eLeftRingA, static_cast<int>( ::FbxCharacter::eLeftRingA)},
    {sipName_eLeftRingB, static_cast<int>( ::FbxCharacter::eLeftRingB)},
    {sipName_eLeftRingC, static_cast<int>( ::FbxCharacter::eLeftRingC)},
    {sipName_eLeftPinkyA, static_cast<int>( ::FbxCharacter::eLeftPinkyA)},
    {sipName_eLeftPinkyB, static_cast<int>( ::FbxCharacter::eLeftPinkyB)},
    {sipName_eLeftPinkyC, static_cast<int>( ::FbxCharacter::eLeftPinkyC)},
    {sipName_eRightThumbA, static_cast<int>( ::FbxCharacter::eRightThumbA)},
    {sipName_eRightThumbB, static_cast<int>( ::FbxCharacter::eRightThumbB)},
    {sipName_eRightThumbC, static_cast<int>( ::FbxCharacter::eRightThumbC)},
    {sipName_eRightIndexA, static_cast<int>( ::FbxCharacter::eRightIndexA)},
    {sipName_eRightIndexB, static_cast<int>( ::FbxCharacter::eRightIndexB)},
    {sipName_eRightIndexC, static_cast<int>( ::FbxCharacter::eRightIndexC)},
    {sipName_eRightMiddleA, static_cast<int>( ::FbxCharacter::eRightMiddleA)},
    {sipName_eRightMiddleB, static_cast<int>( ::FbxCharacter::eRightMiddleB)},
    {sipName_eRightMiddleC, static_cast<int>( ::FbxCharacter::eRightMiddleC)},
    {sipName_eRightRingA, static_cast<int>( ::FbxCharacter::eRightRingA)},
    {sipName_eRightRingB, static_cast<int>( ::FbxCharacter::eRightRingB)},
    {sipName_eRightRingC, static_cast<int>( ::FbxCharacter::eRightRingC)},
    {sipName_eRightPinkyA, static_cast<int>( ::FbxCharacter::eRightPinkyA)},
    {sipName_eRightPinkyB, static_cast<int>( ::FbxCharacter::eRightPinkyB)},
    {sipName_eRightPinkyC, static_cast<int>( ::FbxCharacter::eRightPinkyC)},
    {sipName_eReference, static_cast<int>( ::FbxCharacter::eReference)},
    {sipName_eLeftFloor, static_cast<int>( ::FbxCharacter::eLeftFloor)},
    {sipName_eRightFloor, static_cast<int>( ::FbxCharacter::eRightFloor)},
    {sipName_eHipsTranslation, static_cast<int>( ::FbxCharacter::eHipsTranslation)},
    {sipName_eProps0, static_cast<int>( ::FbxCharacter::eProps0)},
    {sipName_eProps1, static_cast<int>( ::FbxCharacter::eProps1)},
    {sipName_eProps2, static_cast<int>( ::FbxCharacter::eProps2)},
    {sipName_eProps3, static_cast<int>( ::FbxCharacter::eProps3)},
    {sipName_eProps4, static_cast<int>( ::FbxCharacter::eProps4)},
    {sipName_eGameModeParentLeftHipRoll, static_cast<int>( ::FbxCharacter::eGameModeParentLeftHipRoll)},
    {sipName_eGameModeParentLeftKnee, static_cast<int>( ::FbxCharacter::eGameModeParentLeftKnee)},
    {sipName_eGameModeParentLeftKneeRoll, static_cast<int>( ::FbxCharacter::eGameModeParentLeftKneeRoll)},
    {sipName_eGameModeParentRightHipRoll, static_cast<int>( ::FbxCharacter::eGameModeParentRightHipRoll)},
    {sipName_eGameModeParentRightKnee, static_cast<int>( ::FbxCharacter::eGameModeParentRightKnee)},
    {sipName_eGameModeParentRightKneeRoll, static_cast<int>( ::FbxCharacter::eGameModeParentRightKneeRoll)},
    {sipName_eGameModeParentLeftShoulderRoll, static_cast<int>( ::FbxCharacter::eGameModeParentLeftShoulderRoll)},
    {sipName_eGameModeParentLeftElbow, static_cast<int>( ::FbxCharacter::eGameModeParentLeftElbow)},
    {sipName_eGameModeParentLeftElbowRoll, static_cast<int>( ::FbxCharacter::eGameModeParentLeftElbowRoll)},
    {sipName_eGameModeParentRightShoulderRoll, static_cast<int>( ::FbxCharacter::eGameModeParentRightShoulderRoll)},
    {sipName_eGameModeParentRightElbow, static_cast<int>( ::FbxCharacter::eGameModeParentRightElbow)},
    {sipName_eGameModeParentRightElbowRoll, static_cast<int>( ::FbxCharacter::eGameModeParentRightElbowRoll)},
    {sipName_eLeftUpLegRoll, static_cast<int>( ::FbxCharacter::eLeftUpLegRoll)},
    {sipName_eLeftLegRoll, static_cast<int>( ::FbxCharacter::eLeftLegRoll)},
    {sipName_eRightUpLegRoll, static_cast<int>( ::FbxCharacter::eRightUpLegRoll)},
    {sipName_eRightLegRoll, static_cast<int>( ::FbxCharacter::eRightLegRoll)},
    {sipName_eLeftArmRoll, static_cast<int>( ::FbxCharacter::eLeftArmRoll)},
    {sipName_eLeftForeArmRoll, static_cast<int>( ::FbxCharacter::eLeftForeArmRoll)},
    {sipName_eRightArmRoll, static_cast<int>( ::FbxCharacter::eRightArmRoll)},
    {sipName_eRightForeArmRoll, static_cast<int>( ::FbxCharacter::eRightForeArmRoll)},
    {sipName_eLeftHandFloor, static_cast<int>( ::FbxCharacter::eLeftHandFloor)},
    {sipName_eRightHandFloor, static_cast<int>( ::FbxCharacter::eRightHandFloor)},
    {sipName_eLeftHand, static_cast<int>( ::FbxCharacter::eLeftHand)},
    {sipName_eRightHand, static_cast<int>( ::FbxCharacter::eRightHand)},
    {sipName_eNeck1, static_cast<int>( ::FbxCharacter::eNeck1)},
    {sipName_eNeck2, static_cast<int>( ::FbxCharacter::eNeck2)},
    {sipName_eNeck3, static_cast<int>( ::FbxCharacter::eNeck3)},
    {sipName_eNeck4, static_cast<int>( ::FbxCharacter::eNeck4)},
    {sipName_eNeck5, static_cast<int>( ::FbxCharacter::eNeck5)},
    {sipName_eNeck6, static_cast<int>( ::FbxCharacter::eNeck6)},
    {sipName_eNeck7, static_cast<int>( ::FbxCharacter::eNeck7)},
    {sipName_eNeck8, static_cast<int>( ::FbxCharacter::eNeck8)},
    {sipName_eNeck9, static_cast<int>( ::FbxCharacter::eNeck9)},
    {sipName_eLeftInHandThumb, static_cast<int>( ::FbxCharacter::eLeftInHandThumb)},
    {sipName_eLeftThumbD, static_cast<int>( ::FbxCharacter::eLeftThumbD)},
    {sipName_eLeftInHandIndex, static_cast<int>( ::FbxCharacter::eLeftInHandIndex)},
    {sipName_eLeftIndexD, static_cast<int>( ::FbxCharacter::eLeftIndexD)},
    {sipName_eLeftInHandMiddle, static_cast<int>( ::FbxCharacter::eLeftInHandMiddle)},
    {sipName_eLeftMiddleD, static_cast<int>( ::FbxCharacter::eLeftMiddleD)},
    {sipName_eLeftInHandRing, static_cast<int>( ::FbxCharacter::eLeftInHandRing)},
    {sipName_eLeftRingD, static_cast<int>( ::FbxCharacter::eLeftRingD)},
    {sipName_eLeftInHandPinky, static_cast<int>( ::FbxCharacter::eLeftInHandPinky)},
    {sipName_eLeftPinkyD, static_cast<int>( ::FbxCharacter::eLeftPinkyD)},
    {sipName_eLeftInHandExtraFinger, static_cast<int>( ::FbxCharacter::eLeftInHandExtraFinger)},
    {sipName_eLeftExtraFingerA, static_cast<int>( ::FbxCharacter::eLeftExtraFingerA)},
    {sipName_eLeftExtraFingerB, static_cast<int>( ::FbxCharacter::eLeftExtraFingerB)},
    {sipName_eLeftExtraFingerC, static_cast<int>( ::FbxCharacter::eLeftExtraFingerC)},
    {sipName_eLeftExtraFingerD, static_cast<int>( ::FbxCharacter::eLeftExtraFingerD)},
    {sipName_eRightInHandThumb, static_cast<int>( ::FbxCharacter::eRightInHandThumb)},
    {sipName_eRightThumbD, static_cast<int>( ::FbxCharacter::eRightThumbD)},
    {sipName_eRightInHandIndex, static_cast<int>( ::FbxCharacter::eRightInHandIndex)},
    {sipName_eRightIndexD, static_cast<int>( ::FbxCharacter::eRightIndexD)},
    {sipName_eRightInHandMiddle, static_cast<int>( ::FbxCharacter::eRightInHandMiddle)},
    {sipName_eRightMiddleD, static_cast<int>( ::FbxCharacter::eRightMiddleD)},
    {sipName_eRightInHandRing, static_cast<int>( ::FbxCharacter::eRightInHandRing)},
    {sipName_eRightRingD, static_cast<int>( ::FbxCharacter::eRightRingD)},
    {sipName_eRightInHandPinky, static_cast<int>( ::FbxCharacter::eRightInHandPinky)},
    {sipName_eRightPinkyD, static_cast<int>( ::FbxCharacter::eRightPinkyD)},
    {sipName_eRightInHandExtraFinger, static_cast<int>( ::FbxCharacter::eRightInHandExtraFinger)},
    {sipName_eRightExtraFingerA, static_cast<int>( ::FbxCharacter::eRightExtraFingerA)},
    {sipName_eRightExtraFingerB, static_cast<int>( ::FbxCharacter::eRightExtraFingerB)},
    {sipName_eRightExtraFingerC, static_cast<int>( ::FbxCharacter::eRightExtraFingerC)},
    {sipName_eRightExtraFingerD, static_cast<int>( ::FbxCharacter::eRightExtraFingerD)},
    {sipName_eLeftInFootThumb, static_cast<int>( ::FbxCharacter::eLeftInFootThumb)},
    {sipName_eLeftFootThumbA, static_cast<int>( ::FbxCharacter::eLeftFootThumbA)},
    {sipName_eLeftFootThumbB, static_cast<int>( ::FbxCharacter::eLeftFootThumbB)},
    {sipName_eLeftFootThumbC, static_cast<int>( ::FbxCharacter::eLeftFootThumbC)},
    {sipName_eLeftFootThumbD, static_cast<int>( ::FbxCharacter::eLeftFootThumbD)},
    {sipName_eLeftInFootIndex, static_cast<int>( ::FbxCharacter::eLeftInFootIndex)},
    {sipName_eLeftFootIndexA, static_cast<int>( ::FbxCharacter::eLeftFootIndexA)},
    {sipName_eLeftFootIndexB, static_cast<int>( ::FbxCharacter::eLeftFootIndexB)},
    {sipName_eLeftFootIndexC, static_cast<int>( ::FbxCharacter::eLeftFootIndexC)},
    {sipName_eLeftFootIndexD, static_cast<int>( ::FbxCharacter::eLeftFootIndexD)},
    {sipName_eLeftInFootMiddle, static_cast<int>( ::FbxCharacter::eLeftInFootMiddle)},
    {sipName_eLeftFootMiddleA, static_cast<int>( ::FbxCharacter::eLeftFootMiddleA)},
    {sipName_eLeftFootMiddleB, static_cast<int>( ::FbxCharacter::eLeftFootMiddleB)},
    {sipName_eLeftFootMiddleC, static_cast<int>( ::FbxCharacter::eLeftFootMiddleC)},
    {sipName_eLeftFootMiddleD, static_cast<int>( ::FbxCharacter::eLeftFootMiddleD)},
    {sipName_eLeftInFootRing, static_cast<int>( ::FbxCharacter::eLeftInFootRing)},
    {sipName_eLeftFootRingA, static_cast<int>( ::FbxCharacter::eLeftFootRingA)},
    {sipName_eLeftFootRingB, static_cast<int>( ::FbxCharacter::eLeftFootRingB)},
    {sipName_eLeftFootRingC, static_cast<int>( ::FbxCharacter::eLeftFootRingC)},
    {sipName_eLeftFootRingD, static_cast<int>( ::FbxCharacter::eLeftFootRingD)},
    {sipName_eLeftInFootPinky, static_cast<int>( ::FbxCharacter::eLeftInFootPinky)},
    {sipName_eLeftFootPinkyA, static_cast<int>( ::FbxCharacter::eLeftFootPinkyA)},
    {sipName_eLeftFootPinkyB, static_cast<int>( ::FbxCharacter::eLeftFootPinkyB)},
    {sipName_eLeftFootPinkyC, static_cast<int>( ::FbxCharacter::eLeftFootPinkyC)},
    {sipName_eLeftFootPinkyD, static_cast<int>( ::FbxCharacter::eLeftFootPinkyD)},
    {sipName_eLeftInFootExtraFinger, static_cast<int>( ::FbxCharacter::eLeftInFootExtraFinger)},
    {sipName_eLeftFootExtraFingerA, static_cast<int>( ::FbxCharacter::eLeftFootExtraFingerA)},
    {sipName_eLeftFootExtraFingerB, static_cast<int>( ::FbxCharacter::eLeftFootExtraFingerB)},
    {sipName_eLeftFootExtraFingerC, static_cast<int>( ::FbxCharacter::eLeftFootExtraFingerC)},
    {sipName_eLeftFootExtraFingerD, static_cast<int>( ::FbxCharacter::eLeftFootExtraFingerD)},
    {sipName_eRightInFootThumb, static_cast<int>( ::FbxCharacter::eRightInFootThumb)},
    {sipName_eRightFootThumbA, static_cast<int>( ::FbxCharacter::eRightFootThumbA)},
    {sipName_eRightFootThumbB, static_cast<int>( ::FbxCharacter::eRightFootThumbB)},
    {sipName_eRightFootThumbC, static_cast<int>( ::FbxCharacter::eRightFootThumbC)},
    {sipName_eRightFootThumbD, static_cast<int>( ::FbxCharacter::eRightFootThumbD)},
    {sipName_eRightInFootIndex, static_cast<int>( ::FbxCharacter::eRightInFootIndex)},
    {sipName_eRightFootIndexA, static_cast<int>( ::FbxCharacter::eRightFootIndexA)},
    {sipName_eRightFootIndexB, static_cast<int>( ::FbxCharacter::eRightFootIndexB)},
    {sipName_eRightFootIndexC, static_cast<int>( ::FbxCharacter::eRightFootIndexC)},
    {sipName_eRightFootIndexD, static_cast<int>( ::FbxCharacter::eRightFootIndexD)},
    {sipName_eRightInFootMiddle, static_cast<int>( ::FbxCharacter::eRightInFootMiddle)},
    {sipName_eRightFootMiddleA, static_cast<int>( ::FbxCharacter::eRightFootMiddleA)},
    {sipName_eRightFootMiddleB, static_cast<int>( ::FbxCharacter::eRightFootMiddleB)},
    {sipName_eRightFootMiddleC, static_cast<int>( ::FbxCharacter::eRightFootMiddleC)},
    {sipName_eRightFootMiddleD, static_cast<int>( ::FbxCharacter::eRightFootMiddleD)},
    {sipName_eRightInFootRing, static_cast<int>( ::FbxCharacter::eRightInFootRing)},
    {sipName_eRightFootRingA, static_cast<int>( ::FbxCharacter::eRightFootRingA)},
    {sipName_eRightFootRingB, static_cast<int>( ::FbxCharacter::eRightFootRingB)},
    {sipName_eRightFootRingC, static_cast<int>( ::FbxCharacter::eRightFootRingC)},
    {sipName_eRightFootRingD, static_cast<int>( ::FbxCharacter::eRightFootRingD)},
    {sipName_eRightInFootPinky, static_cast<int>( ::FbxCharacter::eRightInFootPinky)},
    {sipName_eRightFootPinkyA, static_cast<int>( ::FbxCharacter::eRightFootPinkyA)},
    {sipName_eRightFootPinkyB, static_cast<int>( ::FbxCharacter::eRightFootPinkyB)},
    {sipName_eRightFootPinkyC, static_cast<int>( ::FbxCharacter::eRightFootPinkyC)},
    {sipName_eRightFootPinkyD, static_cast<int>( ::FbxCharacter::eRightFootPinkyD)},
    {sipName_eRightInFootExtraFinger, static_cast<int>( ::FbxCharacter::eRightInFootExtraFinger)},
    {sipName_eRightFootExtraFingerA, static_cast<int>( ::FbxCharacter::eRightFootExtraFingerA)},
    {sipName_eRightFootExtraFingerB, static_cast<int>( ::FbxCharacter::eRightFootExtraFingerB)},
    {sipName_eRightFootExtraFingerC, static_cast<int>( ::FbxCharacter::eRightFootExtraFingerC)},
    {sipName_eRightFootExtraFingerD, static_cast<int>( ::FbxCharacter::eRightFootExtraFingerD)},
    {sipName_eLeftCollarExtra, static_cast<int>( ::FbxCharacter::eLeftCollarExtra)},
    {sipName_eRightCollarExtra, static_cast<int>( ::FbxCharacter::eRightCollarExtra)},
    {sipName_eNodeIdCount, static_cast<int>( ::FbxCharacter::eNodeIdCount)},
    {sipName_eParamModeOff, static_cast<int>( ::FbxCharacter::eParamModeOff)},
    {sipName_eParamModeAuto, static_cast<int>( ::FbxCharacter::eParamModeAuto)},
    {sipName_eParamModeUser, static_cast<int>( ::FbxCharacter::eParamModeUser)},
    {sipName_ePostureBiped, static_cast<int>( ::FbxCharacter::ePostureBiped)},
    {sipName_ePostureQuadriped, static_cast<int>( ::FbxCharacter::ePostureQuadriped)},
    {sipName_ePostureCount, static_cast<int>( ::FbxCharacter::ePostureCount)},
    {sipName_ePropertyNoUnit, static_cast<int>( ::FbxCharacter::ePropertyNoUnit)},
    {sipName_ePropertyPercent, static_cast<int>( ::FbxCharacter::ePropertyPercent)},
    {sipName_ePropertySecond, static_cast<int>( ::FbxCharacter::ePropertySecond)},
    {sipName_ePropertyCentimeter, static_cast<int>( ::FbxCharacter::ePropertyCentimeter)},
    {sipName_ePropertyDegree, static_cast<int>( ::FbxCharacter::ePropertyDegree)},
    {sipName_ePropertyEnum, static_cast<int>( ::FbxCharacter::ePropertyEnum)},
    {sipName_ePropertyReal, static_cast<int>( ::FbxCharacter::ePropertyReal)},
    {sipName_eRelativeRollExtraction, static_cast<int>( ::FbxCharacter::eRelativeRollExtraction)},
    {sipName_eAbsoluteRollExtraction, static_cast<int>( ::FbxCharacter::eAbsoluteRollExtraction)},
    {sipName_eRollExtractionTypeCount, static_cast<int>( ::FbxCharacter::eRollExtractionTypeCount)},
    {0, 0}
};


sipClassTypeDef sipTypeDef_fbx_FbxCharacter = {
    {
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_FbxCharacter,
        SIP_NULLPTR,
        SIP_NULLPTR
    },
    {
        sipNameNr_FbxCharacter,
        {0, 0, 1},
        18, methods_FbxCharacter,
        240, variables_FbxCharacter,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, intInstances_FbxCharacter, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    SIP_NULLPTR,
    -1,
    -1,
    supers_FbxCharacter,
    slots_FbxCharacter,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_FbxCharacter,
    cast_FbxCharacter,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
};
